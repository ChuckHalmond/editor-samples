{"version":3,"file":"main.js","mappings":"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","sources":["webpack://main/webpack/bootstrap","webpack://main/webpack/runtime/define property getters","webpack://main/webpack/runtime/hasOwnProperty shorthand","webpack://main/webpack/runtime/make namespace object","webpack://main/./node_modules/editor/lib/models/Model.js","webpack://main/./node_modules/editor/lib/elements/Snippets.js","webpack://main/./node_modules/editor/lib/elements/Element.js","webpack://main/./node_modules/editor/lib/elements/containers/menus/MenuItem.js","webpack://main/./node_modules/editor/lib/views/View.js","webpack://main/./node_modules/editor/lib/views/GridView.js","webpack://main/./node_modules/editor/lib/views/TreeView.js","webpack://main/./main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _ModelNodesListBase_items, _ModelEventBase_currentTarget, _ModelEventBase_target, _ModelEventTargetBase_callbacks, _ModelNodeBase_instances, _ModelNodeBase_parentNode, _ModelNodeBase_records, _ModelNodeBase_isRecording, _ModelNodeBase_triggerChange, _ModelNodeBase_handleRecord, _ModelObjectBase_properties, _ModelListBase_items, _ModelChangeObserverBase_instances, _ModelChangeObserverBase_callback, _ModelChangeObserverBase_records, _ModelChangeObserverBase_disconnected, _ModelChangeObserverBase_references, _ModelChangeObserverBase_trigger, _ModelChangeObserverBase_handleModelEvent;\r\nexport { ModelChangeRecord };\r\nexport { ModelEvent };\r\nexport { ModelNode };\r\nexport { ModelObject };\r\nexport { ModelProperty };\r\nexport { ModelList };\r\nexport { ModelChangeObserver };\r\nclass ModelChangeRecordBase {\r\n    constructor(init) {\r\n        this.target = init.target;\r\n        this.changeType = init.changeType;\r\n        this.propertyName = init.propertyName ?? null;\r\n        this.oldValue = init.oldValue ?? undefined;\r\n        this.newValue = init.newValue ?? undefined;\r\n        this.removedIndex = init.removedIndex ?? 0;\r\n        this.removedItems = new ModelNodesList(init.removedItems ?? []);\r\n        this.insertedIndex = init.insertedIndex ?? 0;\r\n        this.insertedItems = new ModelNodesList(init.insertedItems ?? []);\r\n        this.sortedIndices = init.sortedIndices ?? [];\r\n    }\r\n    static get PROPERTY_CHANGE() {\r\n        return 1;\r\n    }\r\n    static get LIST_REMOVE() {\r\n        return 2;\r\n    }\r\n    static get LIST_INSERT() {\r\n        return 3;\r\n    }\r\n    static get LIST_SORT() {\r\n        return 4;\r\n    }\r\n    get PROPERTY_CHANGE() {\r\n        return ModelChangeRecordBase.PROPERTY_CHANGE;\r\n    }\r\n    get LIST_REMOVE() {\r\n        return ModelChangeRecordBase.LIST_REMOVE;\r\n    }\r\n    get LIST_INSERT() {\r\n        return ModelChangeRecordBase.LIST_INSERT;\r\n    }\r\n    get LIST_SORT() {\r\n        return ModelChangeRecordBase.LIST_SORT;\r\n    }\r\n}\r\nvar ModelChangeRecord = ModelChangeRecordBase;\r\nclass ModelNodesListBase {\r\n    constructor(items) {\r\n        _ModelNodesListBase_items.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelNodesListBase_items, items.slice(), \"f\");\r\n    }\r\n    get length() {\r\n        return __classPrivateFieldGet(this, _ModelNodesListBase_items, \"f\").length;\r\n    }\r\n    item(index) {\r\n        return __classPrivateFieldGet(this, _ModelNodesListBase_items, \"f\")[index] ?? null;\r\n    }\r\n    values() {\r\n        return __classPrivateFieldGet(this, _ModelNodesListBase_items, \"f\").values();\r\n    }\r\n}\r\n_ModelNodesListBase_items = new WeakMap();\r\nvar ModelNodesList = ModelNodesListBase;\r\nclass ModelEventBase {\r\n    constructor(type) {\r\n        _ModelEventBase_currentTarget.set(this, void 0);\r\n        _ModelEventBase_target.set(this, void 0);\r\n        this.type = type;\r\n        __classPrivateFieldSet(this, _ModelEventBase_currentTarget, null, \"f\");\r\n        __classPrivateFieldSet(this, _ModelEventBase_target, null, \"f\");\r\n    }\r\n    get currentTarget() {\r\n        return __classPrivateFieldGet(this, _ModelEventBase_currentTarget, \"f\");\r\n    }\r\n    get target() {\r\n        return __classPrivateFieldGet(this, _ModelEventBase_target, \"f\");\r\n    }\r\n}\r\n_ModelEventBase_currentTarget = new WeakMap(), _ModelEventBase_target = new WeakMap();\r\nModelEventBase.ModelEventTargetAccessor = new class ModelEventTargetAccessor {\r\n    setCurrentTarget(event, currentTarget) {\r\n        if (event instanceof ModelEventBase) {\r\n            __classPrivateFieldSet(event, _ModelEventBase_currentTarget, currentTarget, \"f\");\r\n        }\r\n    }\r\n    setTarget(event, target) {\r\n        if (event instanceof ModelEventBase) {\r\n            __classPrivateFieldSet(event, _ModelEventBase_target, target, \"f\");\r\n        }\r\n    }\r\n};\r\nvar ModelEventTargetAccessor = ModelEventBase.ModelEventTargetAccessor;\r\ndelete ModelEventBase.ModelEventTargetAccessor;\r\nvar ModelEvent = ModelEventBase;\r\nclass ModelEventTargetBase {\r\n    constructor() {\r\n        _ModelEventTargetBase_callbacks.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelEventTargetBase_callbacks, new Map(), \"f\");\r\n    }\r\n    receiveEvent(event) {\r\n        const { type } = event;\r\n        const callbacks = __classPrivateFieldGet(this, _ModelEventTargetBase_callbacks, \"f\").get(type);\r\n        ModelEventTargetAccessor.setCurrentTarget(event, this);\r\n        if (callbacks) {\r\n            callbacks.forEach((callback_i) => {\r\n                callback_i(event);\r\n            });\r\n        }\r\n    }\r\n    addEventListener(type, callback) {\r\n        const callbacks = __classPrivateFieldGet(this, _ModelEventTargetBase_callbacks, \"f\").get(type);\r\n        if (callbacks) {\r\n            callbacks.push(callback);\r\n        }\r\n        else {\r\n            __classPrivateFieldGet(this, _ModelEventTargetBase_callbacks, \"f\").set(type, [callback]);\r\n        }\r\n    }\r\n    removeEventListener(type, callback) {\r\n        const callbacks = __classPrivateFieldGet(this, _ModelEventTargetBase_callbacks, \"f\").get(type);\r\n        if (callbacks) {\r\n            const callbackIndex = callbacks.findIndex(callback_i => callback_i == callback);\r\n            if (callbackIndex > -1) {\r\n                callbacks.splice(callbackIndex, 1);\r\n            }\r\n            if (callbacks.length == 0) {\r\n                __classPrivateFieldGet(this, _ModelEventTargetBase_callbacks, \"f\").delete(type);\r\n            }\r\n        }\r\n    }\r\n    dispatchEvent(event) {\r\n        ModelEventTargetAccessor.setTarget(event, this);\r\n        this.receiveEvent(event);\r\n    }\r\n}\r\n_ModelEventTargetBase_callbacks = new WeakMap();\r\nvar ModelEventTarget = ModelEventTargetBase;\r\nclass ModelNodeBase extends ModelEventTargetBase {\r\n    constructor() {\r\n        super();\r\n        _ModelNodeBase_instances.add(this);\r\n        _ModelNodeBase_parentNode.set(this, void 0);\r\n        _ModelNodeBase_records.set(this, void 0);\r\n        _ModelNodeBase_isRecording.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelNodeBase_parentNode, null, \"f\");\r\n        __classPrivateFieldSet(this, _ModelNodeBase_records, [], \"f\");\r\n        __classPrivateFieldSet(this, _ModelNodeBase_isRecording, false, \"f\");\r\n    }\r\n    get parentNode() {\r\n        return __classPrivateFieldGet(this, _ModelNodeBase_parentNode, \"f\");\r\n    }\r\n    setParent(parentNode) {\r\n        if (parentNode !== null) {\r\n            let isCyclicReference = parentNode == this;\r\n            let { parentNode: ancestorNode } = parentNode;\r\n            while (!isCyclicReference && ancestorNode !== null) {\r\n                ({ parentNode: ancestorNode } = ancestorNode);\r\n                isCyclicReference = ancestorNode == this;\r\n            }\r\n            if (!isCyclicReference) {\r\n                __classPrivateFieldSet(this, _ModelNodeBase_parentNode, parentNode, \"f\");\r\n            }\r\n            else {\r\n                throw new TypeError(\"Failed to set parent on ModelNode: circular reference detected in the hierarchy.\");\r\n            }\r\n        }\r\n        else {\r\n            __classPrivateFieldSet(this, _ModelNodeBase_parentNode, null, \"f\");\r\n        }\r\n    }\r\n    beginChanges() {\r\n        __classPrivateFieldSet(this, _ModelNodeBase_isRecording, true, \"f\");\r\n    }\r\n    endChanges() {\r\n        this.dispatchEvent(new ModelEvent(\"modelchange\"));\r\n        __classPrivateFieldGet(this, _ModelNodeBase_records, \"f\").splice(0);\r\n        __classPrivateFieldSet(this, _ModelNodeBase_isRecording, false, \"f\");\r\n    }\r\n    getRecords() {\r\n        return __classPrivateFieldGet(this, _ModelNodeBase_records, \"f\").slice();\r\n    }\r\n    receiveEvent(event) {\r\n        super.receiveEvent(event);\r\n        const { parentNode } = this;\r\n        if (parentNode) {\r\n            parentNode.receiveEvent(event);\r\n        }\r\n    }\r\n}\r\n_ModelNodeBase_parentNode = new WeakMap(), _ModelNodeBase_records = new WeakMap(), _ModelNodeBase_isRecording = new WeakMap(), _ModelNodeBase_instances = new WeakSet(), _ModelNodeBase_triggerChange = function _ModelNodeBase_triggerChange(property, oldValue, newValue) {\r\n    const records = __classPrivateFieldGet(this, _ModelNodeBase_records, \"f\");\r\n    const record = new ModelChangeRecord({\r\n        target: this,\r\n        changeType: ModelChangeRecord.PROPERTY_CHANGE,\r\n        propertyName: property,\r\n        oldValue, newValue\r\n    });\r\n    records.push(record);\r\n    if (!__classPrivateFieldGet(this, _ModelNodeBase_isRecording, \"f\")) {\r\n        this.dispatchEvent(new ModelEvent(\"modelchange\"));\r\n        records.splice(0);\r\n    }\r\n}, _ModelNodeBase_handleRecord = function _ModelNodeBase_handleRecord(record) {\r\n    __classPrivateFieldGet(this, _ModelNodeBase_records, \"f\").push(record);\r\n    if (!__classPrivateFieldGet(this, _ModelNodeBase_isRecording, \"f\")) {\r\n        this.dispatchEvent(new ModelEvent(\"modelchange\"));\r\n        __classPrivateFieldGet(this, _ModelNodeBase_records, \"f\").splice(0);\r\n    }\r\n};\r\nModelNodeBase.ModelNodeRecordsAccessor = new class ModelNodeRecordsAccessor {\r\n    triggerChange(node, property, oldValue, newValue) {\r\n        if (node instanceof ModelNodeBase) {\r\n            __classPrivateFieldGet(node, _ModelNodeBase_instances, \"m\", _ModelNodeBase_triggerChange).call(node, property, oldValue, newValue);\r\n        }\r\n    }\r\n    handleRecord(node, record) {\r\n        if (node instanceof ModelNodeBase) {\r\n            __classPrivateFieldGet(node, _ModelNodeBase_instances, \"m\", _ModelNodeBase_handleRecord).call(node, record);\r\n        }\r\n    }\r\n};\r\nvar ModelNodeRecordsAccessor = ModelNodeBase.ModelNodeRecordsAccessor;\r\ndelete ModelNodeBase.ModelNodeRecordsAccessor;\r\nvar ModelNode = ModelNodeBase;\r\nconst ModelProperty = function () {\r\n    return (target, property) => {\r\n        const { constructor } = target;\r\n        const { prototype } = constructor;\r\n        const setter = function (value) {\r\n            const oldValue = ModelObjectPropertiesAccessor.getProperty(this, property);\r\n            ModelObjectPropertiesAccessor.setProperty(this, property, value);\r\n            if (value !== oldValue) {\r\n                ModelNodeRecordsAccessor.triggerChange(this, property, oldValue, value);\r\n            }\r\n            return true;\r\n        };\r\n        const getter = function () {\r\n            return ModelObjectPropertiesAccessor.getProperty(this, property);\r\n        };\r\n        Object.defineProperty(prototype, property, {\r\n            set: setter,\r\n            get: getter,\r\n            enumerable: true\r\n        });\r\n    };\r\n};\r\nclass ModelObjectBase extends ModelNodeBase {\r\n    constructor() {\r\n        super();\r\n        _ModelObjectBase_properties.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelObjectBase_properties, new Map(), \"f\");\r\n    }\r\n}\r\n_ModelObjectBase_properties = new WeakMap();\r\nModelObjectBase.ModelObjectPropertiesAccessor = new class ModelPropertiesAccessor {\r\n    setProperty(node, property, value) {\r\n        if (node instanceof ModelObjectBase) {\r\n            __classPrivateFieldGet(node, _ModelObjectBase_properties, \"f\").set(property, value);\r\n        }\r\n    }\r\n    getProperty(node, property) {\r\n        if (node instanceof ModelObjectBase) {\r\n            return __classPrivateFieldGet(node, _ModelObjectBase_properties, \"f\").get(property);\r\n        }\r\n    }\r\n};\r\nvar ModelObjectPropertiesAccessor = ModelObjectBase.ModelObjectPropertiesAccessor;\r\ndelete ModelObjectBase.ModelObjectPropertiesAccessor;\r\nvar ModelObject = ModelObjectBase;\r\nclass ModelListBase extends ModelNodeBase {\r\n    constructor(items) {\r\n        super();\r\n        _ModelListBase_items.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelListBase_items, items?.slice() ?? [], \"f\");\r\n    }\r\n    setParent(parentNode) {\r\n        super.setParent(parentNode);\r\n        __classPrivateFieldGet(this, _ModelListBase_items, \"f\").forEach((item_i) => {\r\n            item_i.setParent(parentNode);\r\n        });\r\n    }\r\n    get length() {\r\n        return __classPrivateFieldGet(this, _ModelListBase_items, \"f\").length;\r\n    }\r\n    get(index) {\r\n        return __classPrivateFieldGet(this, _ModelListBase_items, \"f\")[index] ?? null;\r\n    }\r\n    index(item) {\r\n        return __classPrivateFieldGet(this, _ModelListBase_items, \"f\").indexOf(item);\r\n    }\r\n    values() {\r\n        return __classPrivateFieldGet(this, _ModelListBase_items, \"f\").values();\r\n    }\r\n    sort(compareFunction) {\r\n        const items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const indexedItems = items.map((item_i, i) => {\r\n            return {\r\n                item: item_i,\r\n                index: i\r\n            };\r\n        });\r\n        indexedItems.sort((indexedItem_a, indexedItem_b) => {\r\n            return compareFunction(indexedItem_a.item, indexedItem_b.item);\r\n        });\r\n        __classPrivateFieldSet(this, _ModelListBase_items, indexedItems.map(indexedItem_i => indexedItem_i.item), \"f\");\r\n        const record = new ModelChangeRecord({\r\n            target: this,\r\n            changeType: ModelChangeRecord.LIST_SORT,\r\n            sortedIndices: indexedItems.map(indexedItem_i => indexedItem_i.index)\r\n        });\r\n        ModelNodeRecordsAccessor.handleRecord(this, record);\r\n    }\r\n    prepend(...items) {\r\n        const _items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const { parentNode } = this;\r\n        if (parentNode) {\r\n            items.forEach(item_i => {\r\n                item_i.setParent(parentNode);\r\n            });\r\n        }\r\n        _items.splice(0, 0, ...items);\r\n        const record = new ModelChangeRecord({\r\n            target: this,\r\n            changeType: ModelChangeRecord.LIST_INSERT,\r\n            insertedIndex: 0,\r\n            insertedItems: items\r\n        });\r\n        ModelNodeRecordsAccessor.handleRecord(this, record);\r\n    }\r\n    append(...items) {\r\n        const _items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const { length } = _items;\r\n        const { parentNode } = this;\r\n        if (parentNode) {\r\n            items.forEach(item_i => {\r\n                item_i.setParent(parentNode);\r\n            });\r\n        }\r\n        _items.push(...items);\r\n        const record = new ModelChangeRecord({\r\n            target: this,\r\n            changeType: ModelChangeRecord.LIST_INSERT,\r\n            insertedIndex: length,\r\n            insertedItems: items\r\n        });\r\n        ModelNodeRecordsAccessor.handleRecord(this, record);\r\n    }\r\n    insert(index, ...items) {\r\n        const _items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const { length } = _items;\r\n        const positiveIndex = Math.abs(index);\r\n        if (positiveIndex <= length) {\r\n            if (index >= 0) {\r\n                const { parentNode } = this;\r\n                items.forEach(item_i => {\r\n                    item_i.setParent(parentNode);\r\n                });\r\n                if (index < length) {\r\n                    _items.splice(index, 0, ...items);\r\n                }\r\n                else {\r\n                    _items.push(...items);\r\n                }\r\n            }\r\n            else if (index < 0) {\r\n                index = length - index;\r\n                const { parentNode } = this;\r\n                if (parentNode) {\r\n                    items.forEach(item_i => {\r\n                        item_i.setParent(parentNode);\r\n                    });\r\n                }\r\n                _items.splice(index, 0, ...items);\r\n            }\r\n            const record = new ModelChangeRecord({\r\n                target: this,\r\n                changeType: ModelChangeRecord.LIST_INSERT,\r\n                insertedIndex: index,\r\n                insertedItems: items.slice()\r\n            });\r\n            ModelNodeRecordsAccessor.handleRecord(this, record);\r\n        }\r\n    }\r\n    remove(item) {\r\n        const _items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const index = _items.indexOf(item);\r\n        if (index > -1) {\r\n            const item = _items.splice(index, 1)[0];\r\n            const { parentNode } = this;\r\n            if (parentNode) {\r\n                item.setParent(null);\r\n            }\r\n            const record = new ModelChangeRecord({\r\n                target: this,\r\n                changeType: ModelChangeRecord.LIST_REMOVE,\r\n                removedIndex: index,\r\n                removedItems: [item]\r\n            });\r\n            ModelNodeRecordsAccessor.handleRecord(this, record);\r\n        }\r\n    }\r\n    clear() {\r\n        const items = __classPrivateFieldGet(this, _ModelListBase_items, \"f\");\r\n        const { length } = items;\r\n        if (length > 0) {\r\n            const removedItems = items.splice(0);\r\n            const { parentNode } = this;\r\n            if (parentNode) {\r\n                removedItems.forEach((removedItem_i) => {\r\n                    removedItem_i.setParent(null);\r\n                });\r\n            }\r\n            const record = new ModelChangeRecord({\r\n                target: this,\r\n                changeType: ModelChangeRecord.LIST_REMOVE,\r\n                removedIndex: 0,\r\n                removedItems: removedItems\r\n            });\r\n            ModelNodeRecordsAccessor.handleRecord(this, record);\r\n        }\r\n    }\r\n}\r\n_ModelListBase_items = new WeakMap();\r\n;\r\nvar ModelList = ModelListBase;\r\nclass ModelChangeObserverBase {\r\n    constructor(callback) {\r\n        _ModelChangeObserverBase_instances.add(this);\r\n        _ModelChangeObserverBase_callback.set(this, void 0);\r\n        _ModelChangeObserverBase_records.set(this, void 0);\r\n        _ModelChangeObserverBase_disconnected.set(this, void 0);\r\n        _ModelChangeObserverBase_references.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_callback, callback, \"f\");\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_records, [], \"f\");\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_disconnected, false, \"f\");\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_references, new WeakMap(), \"f\");\r\n    }\r\n    observe(node, options) {\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_disconnected, false, \"f\");\r\n        const references = __classPrivateFieldGet(this, _ModelChangeObserverBase_references, \"f\");\r\n        let reference = references.get(node);\r\n        if (!reference) {\r\n            const listener = __classPrivateFieldGet(this, _ModelChangeObserverBase_instances, \"m\", _ModelChangeObserverBase_handleModelEvent).bind(this);\r\n            node.addEventListener(\"modelchange\", listener);\r\n            reference = { listener, options };\r\n            references.set(node, reference);\r\n        }\r\n        else {\r\n            references.set(node, reference);\r\n        }\r\n    }\r\n    unobserve(node) {\r\n        const references = __classPrivateFieldGet(this, _ModelChangeObserverBase_references, \"f\");\r\n        let reference = references.get(node);\r\n        if (reference) {\r\n            const { listener } = reference;\r\n            node.removeEventListener(\"modelchange\", listener);\r\n        }\r\n    }\r\n    disconnect() {\r\n        __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").splice(0);\r\n        __classPrivateFieldSet(this, _ModelChangeObserverBase_disconnected, true, \"f\");\r\n    }\r\n}\r\n_ModelChangeObserverBase_callback = new WeakMap(), _ModelChangeObserverBase_records = new WeakMap(), _ModelChangeObserverBase_disconnected = new WeakMap(), _ModelChangeObserverBase_references = new WeakMap(), _ModelChangeObserverBase_instances = new WeakSet(), _ModelChangeObserverBase_trigger = function _ModelChangeObserverBase_trigger() {\r\n    const records = __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").splice(0);\r\n    if (records.length > 0) {\r\n        __classPrivateFieldGet(this, _ModelChangeObserverBase_callback, \"f\").call(this, records);\r\n    }\r\n}, _ModelChangeObserverBase_handleModelEvent = function _ModelChangeObserverBase_handleModelEvent(event) {\r\n    if (!__classPrivateFieldGet(this, _ModelChangeObserverBase_disconnected, \"f\")) {\r\n        const { target, currentTarget } = event;\r\n        const reference = __classPrivateFieldGet(this, _ModelChangeObserverBase_references, \"f\").get(currentTarget);\r\n        if (reference) {\r\n            const { options } = reference;\r\n            const { properties, propertiesFilter, childList, subtree } = options;\r\n            if (subtree) {\r\n                if (properties && target instanceof ModelNode) {\r\n                    if (propertiesFilter) {\r\n                        __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords()\r\n                            .filter(record_i => {\r\n                            const { propertyName } = record_i;\r\n                            return propertiesFilter.includes(propertyName);\r\n                        }));\r\n                    }\r\n                    else {\r\n                        __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords());\r\n                    }\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_instances, \"m\", _ModelChangeObserverBase_trigger).call(this);\r\n                }\r\n                else if (childList && target instanceof ModelList) {\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords());\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_instances, \"m\", _ModelChangeObserverBase_trigger).call(this);\r\n                }\r\n            }\r\n            else if (target == currentTarget) {\r\n                if (properties && target instanceof ModelNode) {\r\n                    if (propertiesFilter) {\r\n                        __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords()\r\n                            .filter(record_i => {\r\n                            const { propertyName } = record_i;\r\n                            return propertiesFilter.includes(propertyName);\r\n                        }));\r\n                    }\r\n                    else {\r\n                        __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords());\r\n                    }\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_instances, \"m\", _ModelChangeObserverBase_trigger).call(this);\r\n                }\r\n                else if (childList && target instanceof ModelList) {\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_records, \"f\").push(...target.getRecords());\r\n                    __classPrivateFieldGet(this, _ModelChangeObserverBase_instances, \"m\", _ModelChangeObserverBase_trigger).call(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nvar ModelChangeObserver = ModelChangeObserverBase;\r\n//# sourceMappingURL=Model.js.map","export { snakeToCamel };\r\nexport { camelToSnake };\r\nexport { trainToCamel };\r\nexport { camelToTrain };\r\nfunction snakeToCamel(str) {\r\n    return str.split('_').map(str => str.charAt(0).toUpperCase() + str.substring(1).toLowerCase()).join(\"\");\r\n}\r\nfunction camelToSnake(str) {\r\n    return str.replace(/(?<!^)(?=[A-Z])/g, '_').toLowerCase();\r\n}\r\nfunction trainToCamel(str) {\r\n    return str.split('-').map(str => str.charAt(0).toUpperCase() + str.substring(1).toLowerCase()).join(\"\");\r\n}\r\nfunction camelToTrain(str) {\r\n    return str.replace(/(?<!^)(?=[A-Z])/g, '-').toLowerCase();\r\n}\r\n//# sourceMappingURL=Snippets.js.map","import { ModelChangeObserver } from \"../models/Model\";\r\nimport { camelToTrain } from \"./Snippets\";\r\nexport { CustomElement };\r\nexport { QueryProperty };\r\nexport { QueryAllProperty };\r\nexport { AttributeProperty };\r\nexport { reactiveElement };\r\nexport { revokeReactiveElement };\r\nexport { reactiveChildElements };\r\nexport { revokeReactiveChildElements };\r\nexport { element };\r\nexport { fragment };\r\nexport { textNode };\r\nexport { areAttributesMatching };\r\nexport { AttributeMutationMixinBase };\r\nexport { trimMultilineIndent };\r\nexport { Stylesheet };\r\nexport { reactiveElementsMap };\r\nconst AttributeProperty = function (init) {\r\n    return (target, property) => {\r\n        const { constructor } = target;\r\n        const { prototype } = constructor;\r\n        const propertyName = String(property);\r\n        const { defaultValue = null, observed = false, name = camelToTrain(propertyName) } = init;\r\n        if (observed) {\r\n            const observedAttributes = Reflect.get(constructor, \"observedAttributes\", constructor);\r\n            if (Array.isArray(observedAttributes)) {\r\n                observedAttributes.push(name);\r\n            }\r\n            else {\r\n                Object.defineProperty(constructor, \"observedAttributes\", {\r\n                    value: [name],\r\n                    writable: false\r\n                });\r\n            }\r\n        }\r\n        const { type } = init;\r\n        switch (type) {\r\n            case Boolean: {\r\n                Object.defineProperty(prototype, propertyName, {\r\n                    get: function () {\r\n                        return this.hasAttribute(name);\r\n                    },\r\n                    set: function (value) {\r\n                        if (value) {\r\n                            this.setAttribute(name, \"\");\r\n                        }\r\n                        else {\r\n                            this.removeAttribute(name);\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case Object: {\r\n                Object.defineProperty(prototype, propertyName, {\r\n                    get: function () {\r\n                        const val = this.getAttribute(name);\r\n                        return (val !== null) ? JSON.parse(val) : defaultValue;\r\n                    },\r\n                    set: function (value) {\r\n                        if (value !== null) {\r\n                            this.setAttribute(name, JSON.stringify(value));\r\n                        }\r\n                        else {\r\n                            this.removeAttribute(name);\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case Number: {\r\n                Object.defineProperty(prototype, propertyName, {\r\n                    get: function () {\r\n                        const val = this.getAttribute(name);\r\n                        return (val !== null) ? parseFloat(val) : defaultValue;\r\n                    },\r\n                    set: function (value) {\r\n                        if (value !== null) {\r\n                            this.setAttribute(name, value);\r\n                        }\r\n                        else {\r\n                            this.removeAttribute(name);\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case String:\r\n            default: {\r\n                Object.defineProperty(prototype, propertyName, {\r\n                    get: function () {\r\n                        const val = this.getAttribute(name);\r\n                        return (val !== null) ? val : defaultValue;\r\n                    },\r\n                    set: function (value) {\r\n                        if (value !== null) {\r\n                            this.setAttribute(name, value);\r\n                        }\r\n                        else {\r\n                            this.removeAttribute(name);\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n};\r\nfunction Stylesheet(text) {\r\n    const stylesheet = new CSSStyleSheet();\r\n    stylesheet.replaceSync(text);\r\n    return stylesheet;\r\n}\r\nfunction trimMultilineIndent(text) {\r\n    const newlineIndex = text.indexOf(\"\\n\");\r\n    text = text.substring(newlineIndex + 1);\r\n    const indentMatch = text.match(/^[\\s]*/);\r\n    if (indentMatch) {\r\n        const indent = text.substring(0, indentMatch[0].length);\r\n        text = text.replaceAll(indent, \"\").trimEnd();\r\n    }\r\n    return text;\r\n}\r\nconst CustomElement = function (init) {\r\n    return (elementCtor) => {\r\n        const { name, options } = init;\r\n        if (!customElements.get(name)) {\r\n            customElements.define(name, elementCtor, options);\r\n        }\r\n        return elementCtor;\r\n    };\r\n};\r\nconst QueryProperty = function (init) {\r\n    return (target, propertyKey) => {\r\n        const { constructor } = target;\r\n        const { prototype } = constructor;\r\n        const propertyName = String(propertyKey);\r\n        const { selector } = init;\r\n        const withinShadowRoot = init.withinShadowRoot ?? false;\r\n        const getter = withinShadowRoot ? function () {\r\n            return this.shadowRoot.querySelector(selector);\r\n        } : function () {\r\n            return this.querySelector(selector);\r\n        };\r\n        Object.defineProperty(prototype, propertyName, {\r\n            get: getter\r\n        });\r\n    };\r\n};\r\nconst QueryAllProperty = function (init) {\r\n    return (target, propertyKey) => {\r\n        const { constructor } = target;\r\n        const { prototype } = constructor;\r\n        const propertyName = String(propertyKey);\r\n        const { selector } = init;\r\n        const withinShadowRoot = init.withinShadowRoot ?? false;\r\n        const getter = withinShadowRoot ? function () {\r\n            return Array.from(this.shadowRoot.querySelectorAll(selector));\r\n        } : function () {\r\n            return Array.from(this.querySelectorAll(selector));\r\n        };\r\n        Object.defineProperty(prototype, propertyName, {\r\n            get: getter\r\n        });\r\n    };\r\n};\r\nfunction fragment(...nodes) {\r\n    const fragment = document.createDocumentFragment();\r\n    fragment.append(...nodes);\r\n    return fragment;\r\n}\r\nfunction textNode(text) {\r\n    return document.createTextNode(text);\r\n}\r\nfunction element(tagName, init) {\r\n    if (init) {\r\n        const { options, attributes, dataset, children, listeners } = init;\r\n        const element = document.createElement(tagName, options);\r\n        if (attributes) {\r\n            Object.entries(attributes).forEach(([attributeName, attributeValue]) => {\r\n                if (attributeValue !== undefined) {\r\n                    if (typeof attributeValue === \"boolean\") {\r\n                        element.toggleAttribute(camelToTrain(attributeName), attributeValue);\r\n                    }\r\n                    else {\r\n                        element.setAttribute(camelToTrain(attributeName), String(attributeValue));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (dataset) {\r\n            const { dataset: elementDataset } = element;\r\n            Object.keys(dataset).forEach((datasetEntry_i) => {\r\n                elementDataset[datasetEntry_i] = String(dataset[datasetEntry_i]);\r\n            });\r\n        }\r\n        if (children) {\r\n            if (typeof children === \"function\") {\r\n                children(element);\r\n            }\r\n            else if (typeof children === \"object\" && \"length\" in children) {\r\n                element.append(...Array.from(children));\r\n            }\r\n            else {\r\n                element.append(children);\r\n            }\r\n        }\r\n        if (listeners) {\r\n            Object.entries(listeners).forEach(([name_i, listener_i]) => {\r\n                if (Array.isArray(listener_i)) {\r\n                    element.addEventListener(name_i, listener_i[0], listener_i[1]);\r\n                }\r\n                else {\r\n                    element.addEventListener(name_i, listener_i);\r\n                }\r\n            });\r\n        }\r\n        return element;\r\n    }\r\n    return document.createElement(tagName);\r\n}\r\nconst reactiveElementsMap = new WeakMap();\r\nconst reactiveElementsFinalizationRegistry = new FinalizationRegistry((heldValue) => {\r\n    const { model, reactiveElement } = heldValue;\r\n    const reactiveElementsMapEntry = reactiveElementsMap.get(model);\r\n    if (reactiveElementsMapEntry !== undefined) {\r\n        const { reactiveElementsArray } = reactiveElementsMapEntry;\r\n        reactiveElementsArray.splice(reactiveElementsArray.indexOf(reactiveElement), 1);\r\n    }\r\n});\r\nconst reactiveElementsPropertyObserver = new ModelChangeObserver((records) => {\r\n    records.forEach((record_i) => {\r\n        const { target, propertyName, oldValue, newValue } = record_i;\r\n        const { reactiveElementsArray } = reactiveElementsMap.get(target);\r\n        reactiveElementsArray.forEach(reactiveElement_i => {\r\n            const { elementRef, react, properties } = reactiveElement_i;\r\n            const element = elementRef.deref();\r\n            if (element) {\r\n                if (properties.includes(propertyName)) {\r\n                    react(element, propertyName, oldValue, newValue);\r\n                }\r\n            }\r\n        });\r\n    });\r\n});\r\nfunction reactiveElement(model, element, properties, react) {\r\n    const elementRef = new WeakRef(element);\r\n    const reactiveElement = { elementRef, react, properties };\r\n    const reactiveElementsMapEntry = reactiveElementsMap.get(model);\r\n    reactiveElementsFinalizationRegistry.register(element, { model, reactiveElement });\r\n    if (!reactiveElementsMapEntry) {\r\n        const observerOptions = {\r\n            properties: true,\r\n            propertiesFilter: properties\r\n        };\r\n        const reactiveElementsArray = [reactiveElement];\r\n        reactiveElementsMap.set(model, { observerOptions, reactiveElementsArray });\r\n        reactiveElementsPropertyObserver.observe(model, observerOptions);\r\n    }\r\n    else {\r\n        const { reactiveElementsArray, observerOptions } = reactiveElementsMapEntry;\r\n        const { propertiesFilter } = observerOptions;\r\n        reactiveElementsArray.push(reactiveElement);\r\n        observerOptions.propertiesFilter = propertiesFilter ?\r\n            propertiesFilter.concat(properties.filter(property_i => !propertiesFilter.includes(property_i))) : properties.filter((property_i, i, properties) => properties.indexOf(property_i) === i);\r\n    }\r\n    properties.forEach((property_i) => {\r\n        if (property_i in model) {\r\n            const value = Reflect.get(model, property_i, model);\r\n            react(element, property_i, undefined, value);\r\n        }\r\n    });\r\n    return element;\r\n}\r\nfunction revokeReactiveElement(model, element) {\r\n    const reactiveElementsMapEntry = reactiveElementsMap.get(model);\r\n    if (reactiveElementsMapEntry) {\r\n        const { reactiveElementsArray } = reactiveElementsMapEntry;\r\n        const reactiveElementIndex = reactiveElementsArray.findIndex(reactiveElement => reactiveElement.elementRef.deref() === element);\r\n        if (reactiveElementIndex > -1) {\r\n            reactiveElementsArray.splice(reactiveElementIndex, 1);\r\n        }\r\n        if (reactiveElementsArray.length === 0) {\r\n            reactiveElementsMap.delete(model);\r\n        }\r\n    }\r\n}\r\nconst reactiveChildElementsMap = new WeakMap();\r\nconst reactiveChildElementsFinalizationRegistry = new FinalizationRegistry((heldValue) => {\r\n    const { list, reactiveChildElement } = heldValue;\r\n    const reactiveChildrenElementsMapEntry = reactiveChildElementsMap.get(list);\r\n    if (reactiveChildrenElementsMapEntry) {\r\n        const { reactiveChildElementsArray } = reactiveChildrenElementsMapEntry;\r\n        reactiveChildElementsArray.splice(reactiveChildElementsArray.indexOf(reactiveChildElement), 1);\r\n    }\r\n});\r\nconst reactiveChildElementsObserver = new ModelChangeObserver((records) => {\r\n    let range = null;\r\n    Array.from(records.values()).forEach((record_i) => {\r\n        const { target } = record_i;\r\n        const list = target;\r\n        const { length: listLength } = list;\r\n        const { reactiveChildElementsArray } = reactiveChildElementsMap.get(list);\r\n        reactiveChildElementsArray.forEach((reactiveChildElements_i) => {\r\n            const { parentRef, mapping, placeholder } = reactiveChildElements_i;\r\n            const parent = parentRef.deref();\r\n            if (parent) {\r\n                const { firstChild, children } = parent;\r\n                const { length: childrenCount } = children;\r\n                if (placeholder && listLength > 0 && firstChild == placeholder) {\r\n                    parent.removeChild(placeholder);\r\n                }\r\n                const { changeType, LIST_INSERT, LIST_REMOVE, LIST_SORT } = record_i;\r\n                switch (changeType) {\r\n                    case LIST_INSERT: {\r\n                        const { insertedIndex, insertedItems } = record_i;\r\n                        const insertedItemsArray = Array.from(insertedItems.values()).map(mapping);\r\n                        const { length: childrenCount } = children;\r\n                        if (insertedIndex < childrenCount) {\r\n                            children[insertedIndex].before(...insertedItemsArray);\r\n                        }\r\n                        else {\r\n                            parent.append(...insertedItemsArray);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case LIST_REMOVE: {\r\n                        const { removedIndex, removedItems } = record_i;\r\n                        const { length: removedCount } = removedItems;\r\n                        range = range ?? document.createRange();\r\n                        const removeEndIndex = removedIndex + (removedCount - 1);\r\n                        if (removeEndIndex < childrenCount) {\r\n                            range.setStartBefore(children[removedIndex]);\r\n                            range.setEndAfter(children[removeEndIndex]);\r\n                            range.deleteContents();\r\n                        }\r\n                        break;\r\n                    }\r\n                    case LIST_SORT: {\r\n                        const { sortedIndices } = record_i;\r\n                        const childrenArray = Array.from(children);\r\n                        parent.append(...sortedIndices.filter(index_i => index_i < childrenCount).map(index_i => childrenArray[index_i]));\r\n                        break;\r\n                    }\r\n                }\r\n                if (listLength == 0 && placeholder) {\r\n                    parent.append(placeholder);\r\n                }\r\n            }\r\n        });\r\n    });\r\n});\r\nfunction reactiveChildElements(list, mapping, placeholder) {\r\n    return (parent) => {\r\n        const parentRef = new WeakRef(parent);\r\n        const reactiveChildElementsMapEntry = reactiveChildElementsMap.get(list);\r\n        const reactiveChildElement = { parentRef, mapping, placeholder };\r\n        reactiveChildElementsFinalizationRegistry.register(parent, { list, reactiveChildElement });\r\n        if (!reactiveChildElementsMapEntry) {\r\n            const reactiveChildElementsArray = [reactiveChildElement];\r\n            reactiveChildElementsMap.set(list, { reactiveChildElementsArray });\r\n            reactiveChildElementsObserver.observe(list, {\r\n                childList: true\r\n            });\r\n        }\r\n        else {\r\n            const { reactiveChildElementsArray } = reactiveChildElementsMapEntry;\r\n            reactiveChildElementsArray.push(reactiveChildElement);\r\n        }\r\n        const children = list.length == 0 && placeholder ?\r\n            [placeholder] : Array.from(list.values()).map(mapping);\r\n        parent.replaceChildren(...children);\r\n    };\r\n}\r\nfunction revokeReactiveChildElements(list, parent) {\r\n    const reactiveChildElementsMapEntry = reactiveChildElementsMap.get(list);\r\n    if (reactiveChildElementsMapEntry) {\r\n        const { reactiveChildElementsArray } = reactiveChildElementsMapEntry;\r\n        const reactiveChildElementsIndex = reactiveChildElementsArray.findIndex(reactiveChildElement => reactiveChildElement.parentRef.deref() === parent);\r\n        if (reactiveChildElementsIndex > -1) {\r\n            reactiveChildElementsArray.splice(reactiveChildElementsIndex, 1);\r\n        }\r\n        if (reactiveChildElementsArray.length === 0) {\r\n            reactiveChildElementsMap.delete(list);\r\n        }\r\n    }\r\n}\r\nfunction areAttributesMatching(referenceAttributeType, referenceAttributeName, referenceAttributeValue, attributeName, attributeValue) {\r\n    if (referenceAttributeName == attributeName) {\r\n        switch (referenceAttributeType) {\r\n            case \"boolean\":\r\n                return referenceAttributeValue == \"\" && attributeValue == \"\";\r\n            case \"string\":\r\n                return referenceAttributeValue !== \"\" && (referenceAttributeValue == attributeValue);\r\n            case \"list\":\r\n                return (referenceAttributeValue !== \"\" && attributeValue !== null) && new RegExp(`${referenceAttributeValue}\\s*?`, \"g\").test(attributeValue);\r\n        }\r\n    }\r\n    return false;\r\n}\r\nclass AttributeMutationMixinBase {\r\n    constructor(attributeName, attributeType = \"boolean\", attributeValue = \"\") {\r\n        this.attributeName = attributeName;\r\n        this.attributeType = attributeType;\r\n        this.attributeValue = attributeValue;\r\n    }\r\n    attach() {\r\n        throw new TypeError(\"Not implemented method.\");\r\n    }\r\n    detach() {\r\n        throw new TypeError(\"Not implemented method.\");\r\n    }\r\n}\r\n//# sourceMappingURL=Element.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _HTMLEMenuItemElementBase_instances, _HTMLEMenuItemElementBase_positionMenu;\r\nimport { CustomElement, AttributeProperty, QueryProperty, element } from \"../../Element\";\r\nexport { HTMLEMenuItemElement };\r\nexport { EMenuItem };\r\nvar shadowTemplate;\r\nvar style;\r\nlet HTMLEMenuItemElementBase = class HTMLEMenuItemElementBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        _HTMLEMenuItemElementBase_instances.add(this);\r\n        const internals = this.attachInternals();\r\n        this.internals = internals;\r\n        internals.role = \"menuitem\";\r\n        const shadowRoot = this.attachShadow({ mode: \"open\" });\r\n        const adoptedStylesheet = new CSSStyleSheet();\r\n        adoptedStylesheet.replace(style);\r\n        shadowRoot.adoptedStyleSheets = [adoptedStylesheet];\r\n        shadowRoot.append(shadowTemplate.content.cloneNode(true));\r\n    }\r\n    connectedCallback() {\r\n        const { tabIndex } = this;\r\n        this.tabIndex = tabIndex;\r\n    }\r\n    attributeChangedCallback(attributeName, oldValue, newValue) {\r\n        const { internals } = this;\r\n        switch (attributeName) {\r\n            case \"type\": {\r\n                switch (newValue) {\r\n                    case \"checkbox\":\r\n                    case \"radio\": {\r\n                        internals.role = `menuitem${newValue}`;\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        internals.role = \"menuitem\";\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case \"checked\": {\r\n                internals.ariaChecked = String(newValue !== null);\r\n                break;\r\n            }\r\n            case \"disabled\": {\r\n                internals.ariaDisabled = String(newValue !== null);\r\n                break;\r\n            }\r\n            case \"expanded\": {\r\n                internals.ariaExpanded = String(newValue !== null);\r\n                break;\r\n            }\r\n            case \"label\": {\r\n                internals.ariaLabel = newValue;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    toggle(force) {\r\n        const { type, expanded } = this;\r\n        switch (type) {\r\n            case \"menu\":\r\n            case \"submenu\": {\r\n                const expand = force ?? !expanded;\r\n                this.expanded = expand;\r\n                if (expand) {\r\n                    __classPrivateFieldGet(this, _HTMLEMenuItemElementBase_instances, \"m\", _HTMLEMenuItemElementBase_positionMenu).call(this);\r\n                }\r\n                this.dispatchEvent(new Event(\"toggle\", { bubbles: true }));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    expand() {\r\n        const { type, expanded } = this;\r\n        switch (type) {\r\n            case \"menu\":\r\n            case \"submenu\": {\r\n                if (!expanded) {\r\n                    this.expanded = true;\r\n                    __classPrivateFieldGet(this, _HTMLEMenuItemElementBase_instances, \"m\", _HTMLEMenuItemElementBase_positionMenu).call(this);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    collapse() {\r\n        const { type, expanded } = this;\r\n        switch (type) {\r\n            case \"menu\":\r\n            case \"submenu\": {\r\n                if (expanded) {\r\n                    this.expanded = false;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n};\r\n_HTMLEMenuItemElementBase_instances = new WeakSet(), _HTMLEMenuItemElementBase_positionMenu = function _HTMLEMenuItemElementBase_positionMenu() {\r\n    const { menu } = this;\r\n    if (menu !== null) {\r\n        const { style: menuStyle } = menu;\r\n        let { top: itemTop, bottom: itemBottom, left: itemLeft, right: itemRight } = this.getBoundingClientRect();\r\n        const { width: menuWidth, height: menuHeight } = menu.getBoundingClientRect();\r\n        const { clientWidth, clientHeight } = document.body;\r\n        const { type } = this;\r\n        if (type === \"menu\") {\r\n            const offsetParent = (menu.offsetParent ?? document.body);\r\n            const { offsetLeft, offsetTop } = offsetParent;\r\n            const overflowX = itemRight + menuWidth - clientWidth;\r\n            const overflowY = itemTop + menuHeight - clientHeight;\r\n            itemLeft -= offsetLeft;\r\n            itemRight -= offsetLeft;\r\n            itemTop -= offsetTop;\r\n            itemBottom -= offsetTop;\r\n            menuStyle.setProperty(\"left\", `${overflowX > 0 ?\r\n                itemRight - menuWidth :\r\n                itemLeft}px`);\r\n            menuStyle.setProperty(\"top\", `${overflowY > 0 ?\r\n                itemTop - menuHeight :\r\n                itemBottom}px`);\r\n        }\r\n        else {\r\n            const overflowX = itemRight + menuWidth - clientWidth;\r\n            const overflowY = itemTop + menuHeight - clientHeight;\r\n            const closestMenu = this.closest(\"e-menu\");\r\n            if (closestMenu !== null) {\r\n                const { top: closestMenuTop, left: closestMenuLeft } = closestMenu.getBoundingClientRect();\r\n                itemLeft -= closestMenuLeft;\r\n                itemRight -= closestMenuLeft;\r\n                itemTop -= closestMenuTop;\r\n                itemBottom -= closestMenuTop;\r\n            }\r\n            menuStyle.setProperty(\"left\", `${overflowX > 0 ?\r\n                itemLeft - menuWidth :\r\n                itemRight}px`);\r\n            menuStyle.setProperty(\"top\", `${overflowY > 0 ?\r\n                itemBottom - menuHeight :\r\n                itemTop}px`);\r\n        }\r\n    }\r\n};\r\n(() => {\r\n    shadowTemplate = element(\"template\");\r\n    shadowTemplate.content.append(element(\"span\", {\r\n        attributes: {\r\n            part: \"icon\"\r\n        }\r\n    }), element(\"span\", {\r\n        attributes: {\r\n            part: \"label\"\r\n        },\r\n        children: [\r\n            element(\"slot\")\r\n        ]\r\n    }), element(\"span\", {\r\n        attributes: {\r\n            part: \"arrow\"\r\n        }\r\n    }), element(\"slot\", {\r\n        attributes: {\r\n            name: \"menu\"\r\n        }\r\n    }));\r\n    style = /*css*/ `\r\n            :host {\r\n                display: flex;\r\n                user-select: none;\r\n                white-space: nowrap;\r\n                box-sizing: border-box;\r\n            }\r\n            \r\n            :host([disabled]) {\r\n                opacity: 0.38;\r\n                pointer-events: none;\r\n            }\r\n            \r\n            :host(:focus-within) {\r\n                background-color: var(--focused-item-color);\r\n            }\r\n\r\n            :host(:focus-visible) {\r\n                outline: none;\r\n            }\r\n            \r\n            :host(:is([type=\"menu\"], [type=\"submenu\"])) ::slotted([slot=\"menu\"]) {\r\n                z-index: 1;\r\n                position: absolute;\r\n            }\r\n            \r\n            :host(:is([type=\"menu\"], [type=\"submenu\"]):not([expanded])) ::slotted([slot=\"menu\"]) {\r\n                opacity: 0;\r\n                pointer-events: none;\r\n            }\r\n            \r\n            :host([type=\"submenu\"]) [part=\"icon\"] {\r\n                visibility: hidden;\r\n            }\r\n            \r\n            :host([type=\"menu\"]) [part=\"icon\"],\r\n            :host(:not([type=\"submenu\"])) [part=\"arrow\"] {\r\n                display: none;\r\n            }\r\n            \r\n            :host(:is([type=\"checkbox\"], [type=\"radio\"])[checked]) {\r\n                --icon-color: black;\r\n                --icon-image: url(\"/assets/done_FILL0_wght400_GRAD0_opsz48.svg\");\r\n            }\r\n            \r\n            :host([type=\"submenu\"]) {\r\n                --arrow-color: black;\r\n                --arrow-image: url(\"/assets/arrow_right_FILL0_wght400_GRAD0_opsz48.svg\");\r\n            }\r\n            \r\n            [part=\"icon\"],\r\n            [part=\"label\"],\r\n            [part=\"arrow\"] {\r\n                pointer-events: none;\r\n            }\r\n            \r\n            [part=\"icon\"] {\r\n                flex: none;\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                padding: 2px;\r\n                overflow: hidden;\r\n                margin-right: 4px;\r\n            }\r\n            \r\n            [part=\"label\"] {\r\n                flex: auto;\r\n                line-height: 18px;\r\n                padding: 2px;\r\n                margin-left: 8px;\r\n                margin-right: 8px;\r\n            }\r\n            \r\n            :host(:is(:not([type]), [type=\"button\"], [type=\"radio\"], [type=\"checkbox\"])[checked]) [part=\"icon\"] {\r\n                background-color: var(--activated-item-color);\r\n            }\r\n            \r\n            :host(:is(:not([type]), [type=\"button\"], [type=\"radio\"], [type=\"checkbox\"])) [part=\"icon\"]::before {\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                content: \"\";\r\n                mask-size: 18px 18px;\r\n                -webkit-mask-size: 18px 18px;\r\n                background-color: var(--icon-color, none);\r\n                -webkit-mask-image: var(--icon-image, none);\r\n                mask-image: var(--icon-image, none);\r\n                filter: var(--icon-filter, none);\r\n            }\r\n            \r\n            [part=\"arrow\"] {\r\n                flex: none;\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin: 1px 4px 1px 1px;\r\n            }\r\n            \r\n            [part=\"arrow\"]::after {\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin: 1px;\r\n                content: \"\";\r\n                mask-size: 18px 18px;\r\n                -webkit-mask-size: 18px 18px;\r\n                background-color: var(--arrow-color, none);\r\n                -webkit-mask-image: var(--arrow-image, none);\r\n                mask-image: var(--arrow-image, none);\r\n                filter: var(--arrow-filter, none);\r\n            }\r\n\r\n            :host(:hover):host-context(e-menubar:focus),\r\n            :host(:hover):host-context(e-menubar:not(:focus-within)) {\r\n                background-color: var(--hovered-item-color);\r\n            }\r\n        `;\r\n})();\r\n__decorate([\r\n    QueryProperty({ selector: \":scope > e-menu[slot=menu]\" })\r\n], HTMLEMenuItemElementBase.prototype, \"menu\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: String })\r\n], HTMLEMenuItemElementBase.prototype, \"name\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: String, observed: true })\r\n], HTMLEMenuItemElementBase.prototype, \"label\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: String })\r\n], HTMLEMenuItemElementBase.prototype, \"value\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: String })\r\n], HTMLEMenuItemElementBase.prototype, \"hotkey\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], HTMLEMenuItemElementBase.prototype, \"disabled\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], HTMLEMenuItemElementBase.prototype, \"checked\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], HTMLEMenuItemElementBase.prototype, \"expanded\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: Boolean })\r\n], HTMLEMenuItemElementBase.prototype, \"overflown\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: String, defaultValue: \"button\", observed: true })\r\n], HTMLEMenuItemElementBase.prototype, \"type\", void 0);\r\nHTMLEMenuItemElementBase = __decorate([\r\n    CustomElement({\r\n        name: \"e-menuitem\"\r\n    })\r\n], HTMLEMenuItemElementBase);\r\nvar HTMLEMenuItemElement = HTMLEMenuItemElementBase;\r\nvar EMenuItem = Object.assign(function (init) {\r\n    const { label, name, type, value, trigger, menu } = init;\r\n    if (menu) {\r\n        menu.slot = \"menu\";\r\n    }\r\n    return element(\"e-menuitem\", {\r\n        attributes: {\r\n            tabindex: -1,\r\n            title: label,\r\n            name: name,\r\n            value: value,\r\n            type: type\r\n        },\r\n        children: menu ? [\r\n            label,\r\n            menu\r\n        ] : [\r\n            label\r\n        ],\r\n        listeners: {\r\n            click: trigger\r\n        }\r\n    });\r\n}, {\r\n    prototype: HTMLEMenuItemElement.prototype,\r\n    button(init) {\r\n        return new EMenuItem({\r\n            ...init, type: \"button\"\r\n        });\r\n    },\r\n    checkbox(init) {\r\n        return new EMenuItem({\r\n            ...init, type: \"checkbox\"\r\n        });\r\n    },\r\n    radio(init) {\r\n        return new EMenuItem({\r\n            ...init, type: \"radio\"\r\n        });\r\n    },\r\n    menu(init) {\r\n        return new EMenuItem({\r\n            ...init, type: \"menu\"\r\n        });\r\n    },\r\n    submenu(init) {\r\n        return new EMenuItem({\r\n            ...init, type: \"submenu\"\r\n        });\r\n    }\r\n});\r\n//# sourceMappingURL=MenuItem.js.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _ViewBase_model;\r\nexport { View };\r\nclass ViewBase extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        _ViewBase_model.set(this, void 0);\r\n        __classPrivateFieldSet(this, _ViewBase_model, null, \"f\");\r\n    }\r\n    get model() {\r\n        return __classPrivateFieldGet(this, _ViewBase_model, \"f\");\r\n    }\r\n    setModel(model) {\r\n        if (model !== __classPrivateFieldGet(this, _ViewBase_model, \"f\")) {\r\n            __classPrivateFieldSet(this, _ViewBase_model, model, \"f\");\r\n        }\r\n    }\r\n    renderLight() {\r\n        return;\r\n    }\r\n    renderShadow() {\r\n        return;\r\n    }\r\n    render() {\r\n        const { shadowRoot } = this;\r\n        if (shadowRoot !== null) {\r\n            const shadow = this.renderShadow();\r\n            if (shadow) {\r\n                shadowRoot.replaceChildren(shadow);\r\n            }\r\n        }\r\n        const light = this.renderLight();\r\n        if (light) {\r\n            this.replaceChildren(light);\r\n        }\r\n    }\r\n}\r\n_ViewBase_model = new WeakMap();\r\nvar View = ViewBase;\r\n//# sourceMappingURL=View.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _GridViewBase_instances, _GridViewBase_columnDelegate, _GridViewBase_cellDelegate, _GridViewBase_displayFilters, _GridViewBase_searchFilter, _GridViewBase_filter, _GridViewBase_renderGridColumnHeaderCell, _GridViewBase_renderGridBodyRow, _GridViewBase_renderGridDataCell, _GridViewBase_handleHeadContextMenuEvent, _GridViewBase_handleSearchInputEvent, _GridViewBase_handleHeadClickEvent;\r\nimport { element, reactiveChildElements, CustomElement, fragment, AttributeProperty, reactiveElement } from \"../elements/Element\";\r\nimport { ModelList, ModelObject, ModelProperty } from \"../models/Model\";\r\nimport { View } from \"./View\";\r\nexport { GridModel };\r\nexport { GridRowModel };\r\nexport { GridColumnModel };\r\nexport { GridView };\r\nclass GridModel extends ModelObject {\r\n    constructor(init) {\r\n        super();\r\n        const { rows: initRows = [], columns: initColumns = [] } = init ?? {};\r\n        const rows = new ModelList(initRows);\r\n        rows.setParent(this);\r\n        this.rows = rows;\r\n        const columns = new ModelList(initColumns);\r\n        columns.setParent(this);\r\n        this.columns = columns;\r\n    }\r\n    getColumnByName(name) {\r\n        return Array.from(this.columns.values()).find(column_i => column_i.name == name) ?? null;\r\n    }\r\n    sortByColumn(column, sortOrder) {\r\n        Array.from(this.columns.values()).forEach((column_i) => {\r\n            column_i.sortorder = column_i === column ? sortOrder : undefined;\r\n        });\r\n        const sortTest = (() => {\r\n            const { type } = column;\r\n            switch (type) {\r\n                case String: {\r\n                    return (row_1, row_2) => {\r\n                        const cell_1 = String(column.extract(row_1));\r\n                        const cell_2 = String(column.extract(row_2));\r\n                        return sortOrder * cell_1.localeCompare(cell_2);\r\n                    };\r\n                }\r\n                default: {\r\n                    return (row_1, row_2) => {\r\n                        const cell_1 = Number(column.extract(row_1));\r\n                        const cell_2 = Number(column.extract(row_2));\r\n                        return Math.sign(sortOrder * (cell_1 - cell_2));\r\n                    };\r\n                }\r\n            }\r\n        })();\r\n        this.rows.sort(sortTest);\r\n    }\r\n}\r\nclass GridColumnModel extends ModelObject {\r\n    constructor(init) {\r\n        super();\r\n        const { name, type, label, extract, filters = [] } = init;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.label = label;\r\n        this.extract = extract;\r\n        this.filters = filters;\r\n    }\r\n}\r\n__decorate([\r\n    ModelProperty()\r\n], GridColumnModel.prototype, \"sortorder\", void 0);\r\nclass GridRowModel extends ModelObject {\r\n    constructor(init) {\r\n        super();\r\n        const { id, name, age } = init;\r\n        this.id = id;\r\n        this.name = name;\r\n        this.age = age;\r\n    }\r\n}\r\n__decorate([\r\n    ModelProperty()\r\n], GridRowModel.prototype, \"name\", void 0);\r\n__decorate([\r\n    ModelProperty()\r\n], GridRowModel.prototype, \"age\", void 0);\r\nvar style;\r\nlet GridViewBase = class GridViewBase extends View {\r\n    constructor(model) {\r\n        super();\r\n        _GridViewBase_instances.add(this);\r\n        _GridViewBase_columnDelegate.set(this, void 0);\r\n        _GridViewBase_cellDelegate.set(this, void 0);\r\n        _GridViewBase_displayFilters.set(this, void 0);\r\n        _GridViewBase_searchFilter.set(this, void 0);\r\n        __classPrivateFieldSet(this, _GridViewBase_displayFilters, [], \"f\");\r\n        __classPrivateFieldSet(this, _GridViewBase_searchFilter, null, \"f\");\r\n        __classPrivateFieldSet(this, _GridViewBase_cellDelegate, (row, column) => element(\"label\", {\r\n            children: column.extract(row)\r\n        }), \"f\");\r\n        __classPrivateFieldSet(this, _GridViewBase_columnDelegate, (column) => element(\"label\", {\r\n            children: column.label\r\n        }), \"f\");\r\n        const shadowRoot = this.attachShadow({ mode: \"open\" });\r\n        const adoptedStylesheet = new CSSStyleSheet();\r\n        adoptedStylesheet.replace(style);\r\n        shadowRoot.adoptedStyleSheets = [adoptedStylesheet];\r\n        this.setModel(model ?? new GridModel());\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        switch (name) {\r\n            case \"resizable\":\r\n            case \"sortable\": {\r\n                this.render();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get gridElement() {\r\n        return this.shadowRoot.querySelector(\"e-grid\");\r\n    }\r\n    setColumnDelegate(delegate) {\r\n        __classPrivateFieldSet(this, _GridViewBase_columnDelegate, delegate, \"f\");\r\n    }\r\n    setCellDelegate(delegate) {\r\n        __classPrivateFieldSet(this, _GridViewBase_cellDelegate, delegate, \"f\");\r\n    }\r\n    getRowElement(row) {\r\n        return this.shadowRoot.querySelector(`e-grid > e-gridbody > e-gridrow[data-index='${row.id}']`);\r\n    }\r\n    getColumnHeaderElement(column) {\r\n        return this.shadowRoot.querySelector(`e-grid > e-gridhead > e-gridcell[id=${column.name}]`);\r\n    }\r\n    getColumnCellsElements(column) {\r\n        return Array.from(this.shadowRoot.querySelectorAll(`e-grid > e-gridbody > e-gridrow > e-gridcell[headers~=${column.name}]`));\r\n    }\r\n    renderShadow() {\r\n        const { model } = this;\r\n        return fragment(element(\"link\", {\r\n            attributes: {\r\n                rel: \"stylesheet\",\r\n                href: \"/css/main.css\"\r\n            }\r\n        }), element(\"div\", {\r\n            children: element(\"input\", {\r\n                attributes: {\r\n                    type: \"search\"\r\n                },\r\n                listeners: {\r\n                    input: __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_handleSearchInputEvent).bind(this)\r\n                }\r\n            })\r\n        }), element(\"e-grid\", {\r\n            attributes: {\r\n                tabindex: 0,\r\n                selectby: \"row\",\r\n                multisectable: true\r\n            },\r\n            children: [\r\n                element(\"e-gridhead\", {\r\n                    children: reactiveChildElements(model.columns, column => __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_renderGridColumnHeaderCell).call(this, column)),\r\n                    listeners: {\r\n                        contextmenu: __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_handleHeadContextMenuEvent).bind(this),\r\n                        click: __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_handleHeadClickEvent).bind(this)\r\n                    }\r\n                }),\r\n                element(\"e-gridbody\", {\r\n                    children: reactiveChildElements(model.rows, row => __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_renderGridBodyRow).call(this, row))\r\n                })\r\n            ]\r\n        }));\r\n    }\r\n    setSearchFilter(filter) {\r\n        const { model, gridElement } = this;\r\n        const { rows } = model;\r\n        __classPrivateFieldSet(this, _GridViewBase_searchFilter, filter, \"f\");\r\n        Array.from(rows.values()).forEach((row_i) => {\r\n            const rowElement = this.getRowElement(row_i);\r\n            if (rowElement) {\r\n                rowElement.hidden = !__classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_filter).call(this, row_i);\r\n            }\r\n        });\r\n        gridElement.clearSelection();\r\n    }\r\n    addDisplayFilter(filter) {\r\n        const { model, gridElement } = this;\r\n        const { rows } = model;\r\n        const displayFilters = __classPrivateFieldGet(this, _GridViewBase_displayFilters, \"f\");\r\n        if (!displayFilters.includes(filter)) {\r\n            displayFilters.push(filter);\r\n            Array.from(rows.values()).forEach((row_i) => {\r\n                const rowElement = this.getRowElement(row_i);\r\n                if (rowElement) {\r\n                    rowElement.hidden = !__classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_filter).call(this, row_i);\r\n                }\r\n            });\r\n        }\r\n        gridElement.clearSelection();\r\n    }\r\n    removeDisplayFilter(filter) {\r\n        const { model, gridElement } = this;\r\n        const { rows } = model;\r\n        const displayFilters = __classPrivateFieldGet(this, _GridViewBase_displayFilters, \"f\");\r\n        const filterIndex = displayFilters.indexOf(filter);\r\n        if (filterIndex > -1) {\r\n            displayFilters.splice(filterIndex, 1);\r\n            Array.from(rows.values()).forEach((row_i) => {\r\n                const rowElement = this.getRowElement(row_i);\r\n                if (rowElement) {\r\n                    rowElement.hidden = !__classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_filter).call(this, row_i);\r\n                }\r\n            });\r\n        }\r\n        gridElement.clearSelection();\r\n    }\r\n    removeAllDisplayFilters() {\r\n        const { model, gridElement } = this;\r\n        const { rows } = model;\r\n        const displayFilters = __classPrivateFieldGet(this, _GridViewBase_displayFilters, \"f\");\r\n        displayFilters.splice(0, displayFilters.length);\r\n        Array.from(rows.values()).forEach((row_i) => {\r\n            const rowElement = this.getRowElement(row_i);\r\n            if (rowElement) {\r\n                rowElement.hidden = !__classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_filter).call(this, row_i);\r\n            }\r\n        });\r\n        gridElement.clearSelection();\r\n    }\r\n};\r\n_GridViewBase_columnDelegate = new WeakMap(), _GridViewBase_cellDelegate = new WeakMap(), _GridViewBase_displayFilters = new WeakMap(), _GridViewBase_searchFilter = new WeakMap(), _GridViewBase_instances = new WeakSet(), _GridViewBase_filter = function _GridViewBase_filter(row) {\r\n    const displayFilters = __classPrivateFieldGet(this, _GridViewBase_displayFilters, \"f\");\r\n    const searchFilter = __classPrivateFieldGet(this, _GridViewBase_searchFilter, \"f\");\r\n    return (displayFilters.length > 0 ? displayFilters.some(filter_i => filter_i.filter(row)) : true) &&\r\n        (searchFilter ? searchFilter.filter(row) : true);\r\n}, _GridViewBase_renderGridColumnHeaderCell = function _GridViewBase_renderGridColumnHeaderCell(column) {\r\n    const gridColumnElement = reactiveElement(column, element(\"e-gridcell\", {\r\n        attributes: {\r\n            type: \"columnheader\",\r\n            id: column.name\r\n        },\r\n        children: [\r\n            element(\"span\", {\r\n                attributes: {\r\n                    class: \"gridheader-content\"\r\n                },\r\n                children: [\r\n                    element(\"span\", {\r\n                        attributes: {\r\n                            class: \"gridheader-label\"\r\n                        },\r\n                        children: __classPrivateFieldGet(this, _GridViewBase_columnDelegate, \"f\").call(this, column)\r\n                    }),\r\n                    element(\"span\", {\r\n                        attributes: {\r\n                            class: \"gridheader-sort-indicator\"\r\n                        }\r\n                    })\r\n                ].concat(this.resizable ? [\r\n                    element(\"e-wsash\", {\r\n                        attributes: {\r\n                            controls: column.name\r\n                        }\r\n                    })\r\n                ] : [])\r\n            })\r\n        ]\r\n    }), [\"sortorder\"], (cell, property, oldValue, newValue) => {\r\n        switch (property) {\r\n            case \"sortorder\": {\r\n                const { dataset } = cell;\r\n                if (typeof newValue !== \"undefined\") {\r\n                    dataset.sortorder = newValue.toString();\r\n                }\r\n                else {\r\n                    delete dataset.sortorder;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    return gridColumnElement;\r\n}, _GridViewBase_renderGridBodyRow = function _GridViewBase_renderGridBodyRow(row) {\r\n    const { model } = this;\r\n    const gridRowElement = element(\"e-gridrow\", {\r\n        dataset: {\r\n            index: row.id\r\n        },\r\n        children: reactiveChildElements(model.columns, column => __classPrivateFieldGet(this, _GridViewBase_instances, \"m\", _GridViewBase_renderGridDataCell).call(this, row, column))\r\n    });\r\n    return gridRowElement;\r\n}, _GridViewBase_renderGridDataCell = function _GridViewBase_renderGridDataCell(row, column) {\r\n    const gridCellElement = element(\"e-gridcell\", {\r\n        attributes: {\r\n            type: \"gridcell\",\r\n            headers: column.name\r\n        },\r\n        children: element(\"span\", {\r\n            attributes: {\r\n                class: \"gridcell-content\"\r\n            },\r\n            children: [\r\n                element(\"span\", {\r\n                    attributes: {\r\n                        class: \"gridcell-label\"\r\n                    },\r\n                    children: __classPrivateFieldGet(this, _GridViewBase_cellDelegate, \"f\").call(this, row, column)\r\n                })\r\n            ]\r\n        })\r\n    });\r\n    return gridCellElement;\r\n}, _GridViewBase_handleHeadContextMenuEvent = function _GridViewBase_handleHeadContextMenuEvent(event) {\r\n    const { clientX, clientY, currentTarget, target } = event;\r\n    const { gridElement } = this;\r\n    const targetHead = currentTarget;\r\n    const targetHeader = target.closest(\"e-gridcell\");\r\n    const { model } = this;\r\n    if (targetHeader) {\r\n        const column = model.getColumnByName(targetHeader.id);\r\n        const { sortorder, filters } = column;\r\n        const contextMenu = element(\"e-menu\", {\r\n            attributes: {\r\n                contextual: true\r\n            },\r\n            children: [\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        label: \"Resize Auto\"\r\n                    },\r\n                    children: \"Resize auto\",\r\n                    listeners: {\r\n                        click: () => {\r\n                            const columnHeaderElement = this.getColumnHeaderElement(column);\r\n                            if (columnHeaderElement) {\r\n                                const { style } = columnHeaderElement;\r\n                                const labels = this.getColumnCellsElements(column).map(cell_i => cell_i.querySelector(\".gridcell-label\"));\r\n                                const maxWidth = labels.reduce((maxWidth, label) => Math.max(maxWidth, label.getBoundingClientRect().width), 0);\r\n                                style.setProperty(\"width\", `${maxWidth}px`);\r\n                            }\r\n                            gridElement.focus();\r\n                        }\r\n                    }\r\n                }),\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        label: \"Resize To Default\"\r\n                    },\r\n                    children: \"Resize to Default\",\r\n                    listeners: {\r\n                        click: () => {\r\n                            const columnHeaderElement = this.getColumnHeaderElement(column);\r\n                            if (columnHeaderElement) {\r\n                                const { style } = columnHeaderElement;\r\n                                style.removeProperty(\"width\");\r\n                            }\r\n                            gridElement.focus();\r\n                        }\r\n                    }\r\n                }),\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        type: \"submenu\",\r\n                        label: \"Sort\",\r\n                    },\r\n                    children: [\r\n                        \"Sort\",\r\n                        element(\"e-menu\", {\r\n                            attributes: {\r\n                                slot: \"menu\"\r\n                            },\r\n                            children: [\r\n                                element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"radio\",\r\n                                        name: \"sort\",\r\n                                        value: \"1\",\r\n                                        label: \"Ascending\",\r\n                                        checked: sortorder === 1\r\n                                    },\r\n                                    children: \"Ascending\"\r\n                                }),\r\n                                element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"radio\",\r\n                                        name: \"sort\",\r\n                                        value: \"-1\",\r\n                                        label: \"Descending\",\r\n                                        checked: sortorder === -1\r\n                                    },\r\n                                    children: \"Descending\"\r\n                                })\r\n                            ],\r\n                            listeners: {\r\n                                click: (event) => {\r\n                                    const { target } = event;\r\n                                    const targetItem = target.closest(\"e-menuitem\");\r\n                                    if (targetItem) {\r\n                                        model.sortByColumn(column, Number(targetItem.value));\r\n                                    }\r\n                                    gridElement.focus();\r\n                                }\r\n                            }\r\n                        })\r\n                    ]\r\n                }),\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        type: \"submenu\",\r\n                        label: \"Filter\"\r\n                    },\r\n                    children: [\r\n                        \"Filter\",\r\n                        element(\"e-menu\", {\r\n                            attributes: {\r\n                                slot: \"menu\"\r\n                            },\r\n                            children: filters.map(filter => {\r\n                                const { name } = filter;\r\n                                return element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"checkbox\",\r\n                                        checked: __classPrivateFieldGet(this, _GridViewBase_displayFilters, \"f\").includes(filter),\r\n                                        label: name\r\n                                    },\r\n                                    children: name\r\n                                });\r\n                            }).concat(element(\"e-menuitem\", {\r\n                                attributes: {\r\n                                    type: \"button\",\r\n                                    label: \"Remove filters\"\r\n                                },\r\n                                children: \"Remove filters\"\r\n                            })),\r\n                            listeners: {\r\n                                click: (event) => {\r\n                                    const { target } = event;\r\n                                    const targetItem = target.closest(\"e-menuitem\");\r\n                                    if (targetItem) {\r\n                                        const { checked, label } = targetItem;\r\n                                        const filter = filters.find(filter => filter.name === label);\r\n                                        if (filter) {\r\n                                            if (checked) {\r\n                                                this.addDisplayFilter(filter);\r\n                                            }\r\n                                            else {\r\n                                                this.removeDisplayFilter(filter);\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            this.removeAllDisplayFilters();\r\n                                        }\r\n                                    }\r\n                                    gridElement.focus();\r\n                                }\r\n                            }\r\n                        })\r\n                    ]\r\n                })\r\n            ]\r\n        });\r\n        targetHead.append(contextMenu);\r\n        contextMenu.positionContextual(clientX, clientY);\r\n        contextMenu.focus({ preventScroll: true });\r\n        event.preventDefault();\r\n    }\r\n}, _GridViewBase_handleSearchInputEvent = function _GridViewBase_handleSearchInputEvent(event) {\r\n    const { target } = event;\r\n    if (target instanceof HTMLInputElement) {\r\n        const { value } = target;\r\n        if (value !== \"\") {\r\n            this.setSearchFilter({\r\n                filter: (row) => row.name.toLowerCase().includes(value.toLowerCase())\r\n            });\r\n        }\r\n        else {\r\n            this.setSearchFilter(null);\r\n        }\r\n    }\r\n}, _GridViewBase_handleHeadClickEvent = function _GridViewBase_handleHeadClickEvent(event) {\r\n    const { target } = event;\r\n    const targetIsHeaderContent = target.matches(\"e-gridcell[type=columnheader] :scope:not(e-wsash)\");\r\n    if (targetIsHeaderContent) {\r\n        const targetHeader = target.closest(\"e-gridcell\");\r\n        const { model } = this;\r\n        const { columns } = model;\r\n        if (targetHeader) {\r\n            const targetColumn = Array.from(columns.values()).find(column_i => column_i.name == targetHeader.id);\r\n            if (targetColumn) {\r\n                const { sortorder = -1 } = targetColumn;\r\n                model.sortByColumn(targetColumn, -sortorder);\r\n            }\r\n        }\r\n    }\r\n};\r\n(() => {\r\n    style = /*css*/ `\r\n            :host {\r\n                display: block;\r\n            }\r\n            \r\n            e-gridrow[hidden] {\r\n                display: none;\r\n            }\r\n            \r\n            e-gridcell[type=\"gridcell\"] {\r\n                max-width: 0;\r\n            \r\n                overflow: clip;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n            }\r\n            \r\n            e-gridcell[type=\"columnheader\"] {\r\n                width: 120px;\r\n            }\r\n            \r\n            .gridcell-label,\r\n            .gridheader-label {\r\n                padding-left: 4px;\r\n            }\r\n            \r\n            .gridcell-content {\r\n                overflow: clip;\r\n            }\r\n            \r\n            .gridheader-content {\r\n                display: flex;\r\n            }\r\n            \r\n            .gridheader-label {\r\n                flex: 1 1 0;\r\n                overflow: clip;\r\n                text-overflow: ellipsis;\r\n                white-space: nowrap;\r\n            }\r\n            \r\n            e-treeitem::part(arrow) {\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin: 1px 4px 1px 1px;\r\n            }\r\n            \r\n            .gridheader-sort-indicator {\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n            }\r\n            \r\n            .gridheader-sort-indicator::before {\r\n                display: inline-block;\r\n                width: 18px;\r\n                height: 18px;\r\n                margin: 1px;\r\n                content: \"\";\r\n                mask-size: 18px 18px;\r\n                -webkit-mask-size: 18px 18px;\r\n                background-color: var(--sortorder-indicator-color, none);\r\n            }\r\n            \r\n            e-gridcell[type=\"columnheader\"]:not([data-sortorder]) .gridheader-sort-indicator::before {\r\n                background-color: unset;\r\n            }\r\n            \r\n            e-gridcell[type=\"columnheader\"][data-sortorder=\"1\"] .gridheader-sort-indicator::before {\r\n                -webkit-mask-image: var(--sortorder-indicator-ascending, none);\r\n                mask-image: var(--sortorder-indicator-ascending, none);\r\n            }\r\n            \r\n            e-gridcell[type=\"columnheader\"][data-sortorder=\"-1\"] .gridheader-sort-indicator::before {\r\n                -webkit-mask-image: var(--sortorder-indicator-descending, none);\r\n                mask-image: var(--sortorder-indicator-descending, none);\r\n            }\r\n            \r\n            e-gridhead e-wsash:not(:hover) {\r\n                flex: 0 0 auto;\r\n                width: 2px;\r\n                margin-right: 1px;\r\n                margin-left: 1px;\r\n            }\r\n        `;\r\n})();\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], GridViewBase.prototype, \"resizable\", void 0);\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], GridViewBase.prototype, \"sortable\", void 0);\r\nGridViewBase = __decorate([\r\n    CustomElement({\r\n        name: \"e-gridview\"\r\n    })\r\n], GridViewBase);\r\nvar GridView = GridViewBase;\r\n//# sourceMappingURL=GridView.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _TreeModel_instances, _TreeModel_handleModelChangeEvent, _TreeViewBase_instances, _TreeViewBase_dragImages, _TreeViewBase_getTreeItemElementUri, _TreeViewBase_getDragImage, _TreeViewBase_renderTreeItem, _TreeViewBase_renderTreeItemDragImage, _TreeViewBase_handleDragStartEvent, _TreeViewBase_handleDropEvent, _TreeViewBase_handleContextMenuEvent, _TreeViewBase_handleFocusEvent, _TreeViewBase_handleFocusInEvent, _TreeViewBase_handleFocusOutEvent;\r\nimport { AttributeProperty, CustomElement, element, fragment, reactiveChildElements, reactiveElement } from \"../elements/Element\";\r\nimport { ModelList, ModelObject, ModelProperty } from \"../models/Model\";\r\nimport { View } from \"./View\";\r\nexport { TreeItemModelList };\r\nexport { TreeModel };\r\nexport { TreeItemModel };\r\nexport { TreeView };\r\nclass TreeModel extends ModelObject {\r\n    constructor(init) {\r\n        super();\r\n        _TreeModel_instances.add(this);\r\n        const { items = [], sortFunction } = init ?? {};\r\n        items.forEach((item_i, i) => item_i.index = i);\r\n        const childItems = new ModelList(items);\r\n        childItems.setParent(this);\r\n        this.childItems = childItems;\r\n        this.items = new ModelList(this.subtreeItems());\r\n        this.sortFunction = sortFunction ??\r\n            function (item_a, item_b) {\r\n                return item_a.name.localeCompare(item_b.name);\r\n            };\r\n        this.addEventListener(\"modelchange\", __classPrivateFieldGet(this, _TreeModel_instances, \"m\", _TreeModel_handleModelChangeEvent).bind(this));\r\n    }\r\n    subtreeItems() {\r\n        const { childItems } = this;\r\n        return Array.from(childItems.values()).flatMap(treeItem_i => Array.of(treeItem_i, ...treeItem_i.subtreeItems()));\r\n    }\r\n    getItemByUri(uri) {\r\n        const { childItems } = this;\r\n        const { length: itemsCount } = childItems;\r\n        const { length: uriLength } = uri;\r\n        for (let i = 0; i < itemsCount; i++) {\r\n            const item_i = childItems.get(i);\r\n            const { uri: itemUri } = item_i;\r\n            const { length: itemUriLength } = itemUri;\r\n            if (uri.startsWith(itemUri)) {\r\n                if (itemUriLength === uriLength) {\r\n                    return item_i;\r\n                }\r\n                return TreeModel.prototype.getItemByUri.call(item_i, uri);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n_TreeModel_instances = new WeakSet(), _TreeModel_handleModelChangeEvent = function _TreeModel_handleModelChangeEvent(event) {\r\n    const { target } = event;\r\n    const { items, sortFunction, subtreeItems } = this;\r\n    if (target instanceof ModelList) {\r\n        const records = target.getRecords();\r\n        records.forEach((record_i) => {\r\n            const { insertedItems, removedItems } = record_i;\r\n            const flattenedInsertedItems = Array.from(insertedItems.values()).flatMap(insertedItem_i => Array.of(insertedItem_i, ...subtreeItems.call(insertedItem_i)));\r\n            const flattenedRemovedItems = Array.from(removedItems.values()).flatMap(removedItem_i => Array.of(removedItem_i, ...subtreeItems.call(removedItem_i)));\r\n            items.beginChanges();\r\n            items.append(...flattenedInsertedItems);\r\n            flattenedRemovedItems.forEach((removedItem_i) => items.remove(removedItem_i));\r\n            if (sortFunction)\r\n                items.sort(sortFunction);\r\n            items.endChanges();\r\n        });\r\n        Array.from(target.values()).forEach((item_i, i) => {\r\n            item_i.index = i;\r\n        });\r\n    }\r\n};\r\nclass TreeItemModelList {\r\n    constructor(items) {\r\n        this.items = items;\r\n    }\r\n    get count() {\r\n        return this.items.length;\r\n    }\r\n    remove() {\r\n        const { items } = this;\r\n        const removedItemsGroups = items.reduce((map, item_i) => {\r\n            const { parentNode } = item_i;\r\n            if (parentNode instanceof TreeItemModel || parentNode instanceof TreeModel) {\r\n                const { childItems } = parentNode;\r\n                const group = map.get(childItems);\r\n                if (group)\r\n                    group.push(item_i);\r\n                else\r\n                    map.set(childItems, [item_i]);\r\n            }\r\n            return map;\r\n        }, new Map());\r\n        Array.from(removedItemsGroups.entries()).forEach(([list_i, children_i]) => {\r\n            list_i.beginChanges();\r\n            children_i.forEach((child_i) => {\r\n                list_i.remove(child_i);\r\n            });\r\n            list_i.endChanges();\r\n        });\r\n    }\r\n}\r\nclass TreeItemModel extends ModelObject {\r\n    constructor(init) {\r\n        super();\r\n        const { name, type, items = [] } = init;\r\n        items.forEach((item_i, i) => item_i.index = i);\r\n        const childItems = new ModelList(items);\r\n        childItems.setParent(this);\r\n        this.name = name;\r\n        this.childItems = childItems;\r\n        this.type = type;\r\n        this.index = -1;\r\n    }\r\n    get level() {\r\n        const { parentNode } = this;\r\n        if (parentNode instanceof TreeItemModel) {\r\n            return parentNode.level + 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get uri() {\r\n        const { parentNode, name } = this;\r\n        if (parentNode instanceof TreeItemModel) {\r\n            return `${parentNode.uri}${name}/`;\r\n        }\r\n        return `${name}/`;\r\n    }\r\n    get parentItem() {\r\n        const { parentNode } = this;\r\n        if (parentNode instanceof TreeItemModel) {\r\n            return parentNode;\r\n        }\r\n        return null;\r\n    }\r\n    subtreeItems() {\r\n        const { childItems } = this;\r\n        return Array.from(childItems.values()).flatMap(treeItem_i => Array.of(treeItem_i, ...treeItem_i.subtreeItems()));\r\n    }\r\n    remove() {\r\n        const { parentNode } = this;\r\n        if (parentNode instanceof TreeItemModel || parentNode instanceof TreeModel) {\r\n            const { childItems } = parentNode;\r\n            if (childItems) {\r\n                childItems.remove(this);\r\n            }\r\n        }\r\n    }\r\n}\r\n__decorate([\r\n    ModelProperty()\r\n], TreeItemModel.prototype, \"name\", void 0);\r\n__decorate([\r\n    ModelProperty()\r\n], TreeItemModel.prototype, \"type\", void 0);\r\n__decorate([\r\n    ModelProperty()\r\n], TreeItemModel.prototype, \"index\", void 0);\r\nvar style;\r\nlet TreeViewBase = class TreeViewBase extends View {\r\n    constructor(model) {\r\n        super();\r\n        _TreeViewBase_instances.add(this);\r\n        _TreeViewBase_dragImages.set(this, void 0);\r\n        __classPrivateFieldSet(this, _TreeViewBase_dragImages, new WeakMap(), \"f\");\r\n        const shadowRoot = this.attachShadow({ mode: \"open\" });\r\n        const adoptedStylesheet = new CSSStyleSheet();\r\n        adoptedStylesheet.replace(style);\r\n        shadowRoot.adoptedStyleSheets = [adoptedStylesheet];\r\n        this.setModel(model ?? new TreeModel());\r\n    }\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        switch (name) {\r\n            case \"draggable\": {\r\n                const { treeElement } = this;\r\n                if (treeElement) {\r\n                    Array.from(treeElement.items).forEach(item_i => item_i.draggable = newValue !== null);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    get treeElement() {\r\n        return this.shadowRoot.querySelector(\"e-tree\");\r\n    }\r\n    treeItemElement(item) {\r\n        return this.shadowRoot.querySelector(`e-treeitem[uri=${item.uri}]`);\r\n    }\r\n    treeItem(element) {\r\n        return this.model.getItemByUri(__classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_getTreeItemElementUri).call(this, element));\r\n    }\r\n    renderShadow() {\r\n        const { model } = this;\r\n        const treeElement = element(\"e-tree\", {\r\n            attributes: {\r\n                tabindex: 0,\r\n            },\r\n            children: reactiveChildElements(model.childItems, item => __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_renderTreeItem).call(this, item)),\r\n            listeners: {\r\n                dragstart: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleDragStartEvent).bind(this),\r\n                drop: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleDropEvent).bind(this),\r\n                contextmenu: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleContextMenuEvent).bind(this),\r\n                focus: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleFocusEvent).bind(this),\r\n                focusin: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleFocusInEvent).bind(this),\r\n                focusout: __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_handleFocusOutEvent).bind(this),\r\n            }\r\n        });\r\n        return fragment(element(\"link\", {\r\n            attributes: {\r\n                rel: \"stylesheet\",\r\n                href: \"/css/main.css\"\r\n            }\r\n        }), treeElement, element(\"slot\"), element(\"div\", {\r\n            attributes: {\r\n                class: \"offscreen\",\r\n                hidden: true\r\n            },\r\n            children: reactiveChildElements(model.items, item => __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_renderTreeItemDragImage).call(this, item))\r\n        }));\r\n    }\r\n    itemContentDelegate(item) {\r\n        return reactiveElement(item, element(\"span\"), [\"name\"], (label, property, oldValue, newValue) => {\r\n            label.textContent = newValue;\r\n        });\r\n    }\r\n    itemToolbarDelegate(item) {\r\n        return null;\r\n    }\r\n    itemMenuDelegate() {\r\n        return null;\r\n    }\r\n    selectedItems() {\r\n        const { treeElement } = this;\r\n        if (treeElement) {\r\n            const selectedElements = treeElement.selectedItems();\r\n            return selectedElements.map(item_i => this.treeItem(item_i));\r\n        }\r\n        return [];\r\n    }\r\n    activeItem() {\r\n        const { treeElement } = this;\r\n        if (treeElement) {\r\n            const { activeItem } = treeElement;\r\n            return activeItem ?\r\n                this.treeItem(activeItem) :\r\n                null;\r\n        }\r\n        return null;\r\n    }\r\n};\r\n_TreeViewBase_dragImages = new WeakMap(), _TreeViewBase_instances = new WeakSet(), _TreeViewBase_getTreeItemElementUri = function _TreeViewBase_getTreeItemElementUri(item) {\r\n    let uri = \"\";\r\n    let closestItem = item;\r\n    while (closestItem !== null) {\r\n        const { dataset, parentElement } = closestItem;\r\n        const { name } = dataset;\r\n        uri = `${name}/` + uri;\r\n        closestItem = parentElement?.closest(\"e-treeitem\") ?? null;\r\n    }\r\n    return uri;\r\n}, _TreeViewBase_getDragImage = function _TreeViewBase_getDragImage(model) {\r\n    return __classPrivateFieldGet(this, _TreeViewBase_dragImages, \"f\").get(model)?.deref() ?? null;\r\n}, _TreeViewBase_renderTreeItem = function _TreeViewBase_renderTreeItem(item) {\r\n    const { draggable } = this;\r\n    const { index, level, name } = item;\r\n    const toolbar = this.itemToolbarDelegate(item);\r\n    const content = this.itemContentDelegate(item);\r\n    const treeItemElement = reactiveElement(item, element(\"e-treeitem\", {\r\n        attributes: {\r\n            draggable: String(draggable),\r\n            posinset: index,\r\n            level: level\r\n        },\r\n        dataset: {\r\n            name: name\r\n        },\r\n        children: [\r\n            ...(content ? [content] : []),\r\n            ...(toolbar ? [toolbar] : [])\r\n        ]\r\n    }), [\"index\", \"name\", \"type\"], (treeitem, propertyName, oldValue, newValue) => {\r\n        switch (propertyName) {\r\n            case \"index\": {\r\n                treeitem.posinset = newValue;\r\n                break;\r\n            }\r\n            case \"name\": {\r\n                const { dataset } = treeitem;\r\n                dataset.name = newValue;\r\n                break;\r\n            }\r\n            case \"type\": {\r\n                treeitem.type = newValue;\r\n                switch (newValue) {\r\n                    case \"parent\": {\r\n                        treeitem.append(element(\"e-treeitemgroup\", {\r\n                            attributes: {\r\n                                slot: \"group\"\r\n                            },\r\n                            children: reactiveChildElements(item.childItems, item => __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_renderTreeItem).call(this, item))\r\n                        }));\r\n                        break;\r\n                    }\r\n                    case \"leaf\": {\r\n                        const { group } = treeitem;\r\n                        if (group) {\r\n                            group.remove();\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    });\r\n    return treeItemElement;\r\n}, _TreeViewBase_renderTreeItemDragImage = function _TreeViewBase_renderTreeItemDragImage(item) {\r\n    const dragImageElement = reactiveElement(item, element(\"span\", {\r\n        attributes: {\r\n            class: \"dragimage\"\r\n        }\r\n    }), [\"name\"], (span, property, oldValue, newValue) => {\r\n        span.textContent = newValue;\r\n    });\r\n    __classPrivateFieldGet(this, _TreeViewBase_dragImages, \"f\").set(item, new WeakRef(dragImageElement));\r\n    return dragImageElement;\r\n}, _TreeViewBase_handleDragStartEvent = function _TreeViewBase_handleDragStartEvent(event) {\r\n    const { currentTarget, target } = event;\r\n    const targetTree = currentTarget;\r\n    const targetItem = target.closest(\"e-treeitem\");\r\n    const { model } = this;\r\n    if (targetItem) {\r\n        const { dataTransfer } = event;\r\n        const selectedElements = targetTree.selectedItems();\r\n        const { length: selectedCount } = selectedElements;\r\n        if (selectedCount > 0) {\r\n            const selectedUris = selectedElements\r\n                .map(element_i => __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_getTreeItemElementUri).call(this, element_i))\r\n                .filter((uri_i, _, uris) => !uris.some(uri_j => uri_i.startsWith(`${uri_j}/`)));\r\n            const selectedUrisString = selectedUris.join(\"\\n\");\r\n            const lastUri = selectedUris[selectedUris.length - 1];\r\n            const lastItem = model.getItemByUri(lastUri);\r\n            if (lastItem && dataTransfer) {\r\n                dataTransfer.dropEffect = \"move\";\r\n                dataTransfer.setData(\"text/plain\", selectedUrisString);\r\n                const dragImage = __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_getDragImage).call(this, lastItem);\r\n                if (dragImage) {\r\n                    dataTransfer.setDragImage(dragImage, -16, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}, _TreeViewBase_handleDropEvent = function _TreeViewBase_handleDropEvent(event) {\r\n    const { currentTarget, target } = event;\r\n    const targetTree = currentTarget;\r\n    const targetItem = target.closest(\"e-treeitem\");\r\n    const { model } = this;\r\n    const { sortFunction } = model;\r\n    if (targetItem) {\r\n        const { dataTransfer } = event;\r\n        if (dataTransfer) {\r\n            const targetUri = __classPrivateFieldGet(this, _TreeViewBase_instances, \"m\", _TreeViewBase_getTreeItemElementUri).call(this, targetItem);\r\n            const targetItemModel = model.getItemByUri(targetUri);\r\n            const transferedUris = dataTransfer.getData(\"text/plain\").split(\"\\n\");\r\n            const targetIsWithin = transferedUris.some(uri_i => targetUri.startsWith(`${uri_i}/`) || uri_i === targetUri);\r\n            if (!targetIsWithin) {\r\n                const transferedItems = (transferedUris.map(uri_i => model.getItemByUri(uri_i)).filter(item_i => item_i !== null));\r\n                const { type: targetType, parentItem: targetParentItem } = targetItemModel;\r\n                const { childItems: targetList } = targetType === \"parent\" ? targetItemModel :\r\n                    targetParentItem ? targetParentItem : model;\r\n                const targetItems = Array.from(targetList.values());\r\n                targetItems.forEach((item_i) => {\r\n                    const sameLabelIndex = transferedItems.findIndex(item_j => item_j.name === item_i.name);\r\n                    if (sameLabelIndex > -1) {\r\n                        const doReplace = confirm(`Replace ${item_i.name}?`);\r\n                        if (doReplace) {\r\n                            targetList.remove(item_i);\r\n                        }\r\n                        else {\r\n                            transferedItems.copyWithin(sameLabelIndex, sameLabelIndex + 1);\r\n                            transferedItems.length--;\r\n                        }\r\n                    }\r\n                });\r\n                const transferedItemsModelList = new TreeItemModelList(transferedItems);\r\n                transferedItemsModelList.remove();\r\n                if (sortFunction) {\r\n                    targetList.beginChanges();\r\n                    targetList.append(...transferedItems);\r\n                    targetList.sort(sortFunction);\r\n                    targetList.endChanges();\r\n                }\r\n                else {\r\n                    targetList.insert(targetItem.posinset, ...transferedItems);\r\n                }\r\n                const newElements = targetTree.querySelectorAll(`e-treeitem:is(${transferedItems.map(item_i => `[data-uri=\"${item_i.uri}\"]`).join(\",\")})`);\r\n                targetTree.beginSelection();\r\n                newElements.forEach(element_i => element_i.selected = true);\r\n                targetTree.endSelection();\r\n            }\r\n        }\r\n    }\r\n}, _TreeViewBase_handleContextMenuEvent = function _TreeViewBase_handleContextMenuEvent(event) {\r\n    const { clientX, clientY, currentTarget, target } = event;\r\n    const targetTree = currentTarget;\r\n    const targetItem = target.closest(\"e-treeitem\");\r\n    if (targetItem) {\r\n        const contextMenu = this.itemMenuDelegate();\r\n        if (contextMenu !== null) {\r\n            contextMenu.contextual = true;\r\n            contextMenu.addEventListener(\"close\", () => {\r\n                targetItem.focus({ preventScroll: true });\r\n            });\r\n            targetTree.append(contextMenu);\r\n            contextMenu.positionContextual(clientX, clientY);\r\n            contextMenu.focus({ preventScroll: true });\r\n        }\r\n    }\r\n    event.preventDefault();\r\n}, _TreeViewBase_handleFocusEvent = function _TreeViewBase_handleFocusEvent(event) {\r\n    const { currentTarget, relatedTarget } = event;\r\n    const targetTree = currentTarget;\r\n    if (relatedTarget !== null && !this.contains(relatedTarget)) {\r\n        const relatedPosition = relatedTarget.compareDocumentPosition(this);\r\n        if (!(relatedPosition & Node.DOCUMENT_POSITION_DISCONNECTED) && (relatedPosition & Node.DOCUMENT_POSITION_PRECEDING)) {\r\n            const { activeItem } = targetTree;\r\n            if (activeItem) {\r\n                const itemToolbar = activeItem.querySelector(\"e-toolbar\");\r\n                if (itemToolbar) {\r\n                    event.preventDefault();\r\n                    itemToolbar.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}, _TreeViewBase_handleFocusInEvent = function _TreeViewBase_handleFocusInEvent(event) {\r\n    const { target } = event;\r\n    const targetItem = target.closest(\"e-treeitem\");\r\n    if (targetItem) {\r\n        const itemToolbar = targetItem.querySelector(\"e-toolbar\");\r\n        if (itemToolbar) {\r\n            itemToolbar.tabIndex = itemToolbar.contains(target) ? -1 : 0;\r\n        }\r\n    }\r\n}, _TreeViewBase_handleFocusOutEvent = function _TreeViewBase_handleFocusOutEvent(event) {\r\n    const { target } = event;\r\n    const targetItem = target.closest(\"e-treeitem\");\r\n    if (targetItem) {\r\n        const itemToolbar = targetItem.querySelector(\"e-toolbar\");\r\n        if (itemToolbar) {\r\n            itemToolbar.tabIndex = itemToolbar.contains(target) ? 0 : -1;\r\n        }\r\n    }\r\n};\r\n(() => {\r\n    style = /*css*/ `\r\n            :host {\r\n                display: block;\r\n            }\r\n            \r\n            .offscreen {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                transform: translateY(-100%);\r\n                display: block;\r\n                pointer-events: none;\r\n            }\r\n            \r\n            .dragimage {\r\n                white-space: nowrap;\r\n                margin: 1px;\r\n                display: inline-block;\r\n                outline: 1px solid var(--focused-item-outline-color);\r\n                outline-offset: -1px;\r\n                border-radius: 3px; \r\n                padding: 2px 4px;\r\n            }\r\n        `;\r\n})();\r\n__decorate([\r\n    AttributeProperty({ type: Boolean, observed: true })\r\n], TreeViewBase.prototype, \"draggable\", void 0);\r\nTreeViewBase = __decorate([\r\n    CustomElement({\r\n        name: \"e-treeview\"\r\n    })\r\n], TreeViewBase);\r\nvar TreeView = TreeViewBase;\r\n//# sourceMappingURL=TreeView.js.map","import { HTMLEMenuElement } from \"editor/elements/containers/menus/Menu\";\r\nimport { EMenuItem } from \"editor/elements/containers/menus/MenuItem\";\r\nimport { HTMLEToolBarElement } from \"editor/elements/containers/toolbars/ToolBar\";\r\nimport { HTMLEToolBarItemElement } from \"editor/elements/containers/toolbars/ToolBarItem\";\r\nimport { HTMLETreeElement } from \"editor/elements/containers/trees/Tree\";\r\nimport { HTMLETreeItemElement } from \"editor/elements/containers/trees/TreeItem\";\r\nimport { HTMLETabListElement } from \"editor/elements/containers/tabs/TabList\";\r\nimport { CustomElement, revokeReactiveElement, element, fragment, reactiveElement, reactiveElementsMap } from \"editor/elements/Element\";\r\nimport { ModelEvent, ModelObject, ModelProperty } from \"editor/models/Model\";\r\nimport { GridColumnModel, GridModel, GridRowModel, GridView } from \"editor/views/GridView\";\r\nimport { TreeItemModelList, TreeItemModel, TreeModel, TreeView } from \"editor/views/TreeView\";\r\n\r\ninterface PreloadDataFile {\r\n    assets: {\r\n        as: \"image\",\r\n        hrefs: string[]\r\n    }[]\r\n}\r\n\r\nclass MyTreeItemModelList extends TreeItemModelList {\r\n    readonly items!: MyTreeItemModel[];\r\n\r\n    constructor(items: MyTreeItemModel[]) {\r\n        super(items);\r\n    }\r\n\r\n    get count(): number {\r\n        return this.items.length;\r\n    }\r\n\r\n    show(): void {\r\n        this.items.forEach(item_i => item_i.show());\r\n    }\r\n\r\n    hide(): void {\r\n        this.items.forEach(item_i => item_i.hide());\r\n    }\r\n    \r\n    display(): void {\r\n        const result = this.items.map(item_i => item_i.name).join(\" \");\r\n        console.log(result);\r\n    }\r\n}\r\n\r\nclass MyTreeItemModel extends TreeItemModel {\r\n    \r\n    @ModelProperty()\r\n    childCount: number;\r\n\r\n    @ModelProperty()\r\n    visibility: boolean;\r\n\r\n    constructor(init: {name: string, type: \"leaf\" | \"parent\", items?: TreeItemModel[]}) {\r\n        super(init);\r\n        this.childCount = this.childItems.length;\r\n        this.visibility = true;\r\n        this.addEventListener(\"modelchange\", this.#handleModelChangeEvent.bind(this));\r\n    }\r\n\r\n    show(): void {\r\n        this.visibility = true;\r\n    }\r\n\r\n    hide(): void {\r\n        this.visibility = false;\r\n    }\r\n\r\n    display(): void {\r\n        console.log(this.name);\r\n    }\r\n\r\n    #handleModelChangeEvent(event: ModelEvent): void {\r\n        const {target} = event;\r\n        const {childItems} = this;\r\n        if (target == childItems) {\r\n            this.childCount = childItems.length;\r\n        }\r\n    }\r\n}\r\n\r\nexport async function main() {\r\n    const preloadData = <PreloadDataFile>(await fetch(\"/assets/preload.json\").then((resp) => resp.json()));\r\n    preloadData.assets.forEach(\r\n        asset => {\r\n            document.head.append(\r\n                ...asset.hrefs.map(href =>\r\n                    element(\"link\", {\r\n                        attributes: {\r\n                            as: asset.as,\r\n                            href: `/assets/${href}`\r\n                        }\r\n                    })\r\n                )\r\n            )\r\n        }\r\n    );\r\n    \r\n    const gridView = new GridView();\r\n    gridView.resizable = true;\r\n    gridView.setModel(\r\n        new GridModel({\r\n            columns: [\r\n                new GridColumnModel({\r\n                    name: \"name\",\r\n                    type: String,\r\n                    label: \"Name\",\r\n                    extract: (row) => row.name\r\n                }),\r\n                new GridColumnModel({\r\n                    name: \"age\",\r\n                    type: Number,\r\n                    label: \"Age\",\r\n                    extract: (row) => String(row.age),\r\n                    filters: [{\r\n                        name: \"Minors\",\r\n                        filter: (row) => row.age < 18\r\n                    },{\r\n                        name: \"Majors\",\r\n                        filter: (row) => row.age >= 18\r\n                    }]\r\n                }),\r\n                new GridColumnModel({\r\n                    name: \"birthyear\",\r\n                    type: String,\r\n                    label: \"Brith Year\",\r\n                    extract: (row) => String(new Date().getFullYear() - row.age)\r\n                }),\r\n            ],\r\n            rows: [\r\n                new GridRowModel({\r\n                    id: 1,\r\n                    name: \"Denis\",\r\n                    age: 13\r\n                }),\r\n                new GridRowModel({\r\n                    id: 2,\r\n                    name: \"Jean-Charles\",\r\n                    age: 32\r\n                }),\r\n                new GridRowModel({\r\n                    id: 3,\r\n                    name: \"Charles\",\r\n                    age: 25\r\n                }),\r\n                new GridRowModel({\r\n                    id: 4,\r\n                    name: \"Mamagubida\",\r\n                    age: 128\r\n                })\r\n            ]\r\n        })\r\n    );\r\n    document.body.append(gridView);\r\n    gridView.render();\r\n\r\n    const treeModel = new TreeModel({\r\n        items: [\r\n            new MyTreeItemModel({\r\n                name: \"TI 0\",\r\n                type: \"parent\",\r\n                items: [\r\n                    new MyTreeItemModel({\r\n                        name: \"TI 1A\",\r\n                        type: \"parent\",\r\n                        items: [\r\n                            new MyTreeItemModel({\r\n                                type: \"leaf\",\r\n                                name: \"TI 1AX\"\r\n                            }),\r\n                        ]\r\n                    }),\r\n                    new MyTreeItemModel({\r\n                        type: \"parent\",\r\n                        name: \"TI 1B\"\r\n                    })\r\n                ]\r\n            }),\r\n            new MyTreeItemModel({\r\n                name: \"TI 1\",\r\n                type: \"parent\",\r\n                items: [\r\n                    new MyTreeItemModel({\r\n                        name: \"TI 1A\",\r\n                        type: \"parent\",\r\n                        items: [\r\n                            new MyTreeItemModel({\r\n                                type: \"leaf\",\r\n                                name: \"TI 1AX\"\r\n                            }),\r\n                        ]\r\n                    }),\r\n                    new MyTreeItemModel({\r\n                        type: \"parent\",\r\n                        name: \"TI 1B\"\r\n                    })\r\n                ]\r\n            }),\r\n            new MyTreeItemModel({\r\n                type: \"leaf\",\r\n                name: \"TI 2\"\r\n            }),\r\n            new MyTreeItemModel({\r\n                type: \"leaf\",\r\n                name: \"TI 3\"\r\n            })\r\n        ]\r\n    });\r\n    \r\n    @CustomElement({\r\n        name: \"e-mytreeview\"\r\n    })\r\n    class MyTreeView extends TreeView {\r\n\r\n        override render(): void {\r\n            super.render();\r\n            const {shadowRoot, treeElement} = this;\r\n            shadowRoot.prepend(\r\n                element(\"link\", {\r\n                    attributes: {\r\n                        rel: \"stylesheet\",\r\n                        href: \"/sample/css/mytreeview.css\"\r\n                    }\r\n                })\r\n            );\r\n            treeElement!.addEventListener(\"keydown\", this.#handleKeyDownEvent.bind(this));\r\n            treeElement!.addEventListener(\"dblclick\", this.#handleDoubleClickEvent.bind(this));\r\n        }\r\n\r\n        override itemContentDelegate(item: MyTreeItemModel) {\r\n            return fragment(\r\n                reactiveElement(\r\n                    item,\r\n                    element(\"span\", {\r\n                        attributes: {\r\n                            class: \"label\"\r\n                        }\r\n                    }),\r\n                    [\"name\"],\r\n                    (label, property, oldValue, newValue) => {\r\n                        label.textContent = newValue;\r\n                    }\r\n                ),\r\n                reactiveElement(\r\n                    item,\r\n                    element(\"span\", {\r\n                        attributes: {\r\n                            class: \"badge\"\r\n                        }\r\n                    }),\r\n                    [\"childCount\", \"type\"],\r\n                    (badge, property, oldValue, newValue) => {\r\n                        switch (property) {\r\n                            case \"type\": {\r\n                                if (newValue === \"leaf\") {\r\n                                    badge.textContent = null;\r\n                                }\r\n                                else {\r\n                                    badge.textContent = `(${item.childCount})`;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case \"childCount\": {\r\n                                badge.textContent = `(${newValue})`;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                )\r\n            );\r\n        }\r\n\r\n        override itemToolbarDelegate(this: TreeView, item: MyTreeItemModel): HTMLEToolBarElement {\r\n            return reactiveElement(\r\n                item,\r\n                element(\"e-toolbar\", {\r\n                    children: [\r\n                        element(\"e-toolbaritem\", {\r\n                            attributes: {\r\n                                name: \"visibility\",\r\n                                type: \"checkbox\",\r\n                                label: \"Visibility\",\r\n                                iconed: true\r\n                            },\r\n                            listeners: {\r\n                                click: (event) => {\r\n                                    item.visibility ?\r\n                                        item.hide() :\r\n                                        item.show();\r\n                                    event.stopPropagation();\r\n                                }\r\n                            }\r\n                        })\r\n                    ]\r\n                }),\r\n                [\"visibility\"],\r\n                (toolbar, property, oldValue, newValue) => {\r\n                    switch (property) {\r\n                        case \"visibility\": {\r\n                            const visibilityItem = toolbar\r\n                                .querySelector<HTMLEToolBarItemElement>(\"e-toolbaritem[name=visibility]\");\r\n                            if (visibilityItem) {\r\n                                const label = newValue ? \"Hide\" : \"Show\";\r\n                                visibilityItem.label = label;\r\n                                visibilityItem.title = label;\r\n                                visibilityItem.pressed = newValue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n        override itemMenuDelegate(this: TreeView): HTMLEMenuElement {\r\n            const {treeElement} = this;\r\n            const {activeItem: activeItemElement} = treeElement!;\r\n            const selectedItems = <MyTreeItemModel[]>this.selectedItems();\r\n            const activeItem = <MyTreeItemModel>this.activeItem();\r\n            return element(\"e-menu\", {\r\n                attributes: {\r\n                    contextual: true\r\n                },\r\n                children: [\r\n                    element(\"e-menuitemgroup\", {\r\n                        children: [\r\n                            element(\"e-menuitem\", {\r\n                                attributes: {\r\n                                    type: \"checkbox\",\r\n                                    label: activeItem.visibility ? \"Hide\" : \"Show\"\r\n                                },\r\n                                children: activeItem.visibility ? \"Hide\" : \"Show\",\r\n                                listeners: {\r\n                                    click: () => {\r\n                                        const selectedItemsList = selectedItems.includes(activeItem) ?\r\n                                            new MyTreeItemModelList(selectedItems) : new MyTreeItemModelList([activeItem]);\r\n                                        activeItem.visibility ?\r\n                                            selectedItemsList.hide() :\r\n                                            selectedItemsList.show();\r\n                                        activeItemElement!.focus();\r\n                                    }\r\n                                }\r\n                            })\r\n                        ]\r\n                    }),\r\n                    element(\"e-separator\"),\r\n                    element(\"e-menuitemgroup\", {\r\n                        children: [\r\n                            element(\"e-menuitem\", {\r\n                                attributes: {\r\n                                    label: \"Delete\"\r\n                                },\r\n                                children: \"Delete\",\r\n                                listeners: {\r\n                                    click: () => {\r\n                                        const selectedItemsList = selectedItems.includes(activeItem) ?\r\n                                            new MyTreeItemModelList(selectedItems) : new MyTreeItemModelList([activeItem]);\r\n                                        const {count} = selectedItemsList;\r\n                                        const doRemove = confirm(`Remove ${count} items?`);\r\n                                        if (doRemove) {\r\n                                            selectedItemsList.remove();\r\n                                        }\r\n                                        treeElement!.focus();\r\n                                    }\r\n                                }\r\n                            })\r\n                        ]\r\n                    })\r\n                ]\r\n            });\r\n        }\r\n\r\n        #handleKeyDownEvent(event: KeyboardEvent) {\r\n            const {currentTarget, key} = event;\r\n            const targetTree = <HTMLETreeElement>currentTarget;\r\n            const {activeItem} = targetTree;\r\n            if (activeItem) {\r\n                const activeItemModel = <MyTreeItemModel>this.treeItem(activeItem!)!;\r\n                switch (key) {\r\n                    case \"Delete\": {\r\n                        const selectedItems = this.selectedItems();\r\n                        const selectedItemsList = selectedItems.includes(activeItemModel) ?\r\n                            new TreeItemModelList(selectedItems) : new TreeItemModelList([activeItemModel]);\r\n                        const {count} = selectedItemsList;\r\n                        const doRemove = confirm(`Remove ${count} items?`);\r\n                        if (doRemove) {\r\n                            selectedItemsList.remove();\r\n                        }\r\n                        targetTree.focus();\r\n                        event.preventDefault();\r\n                        break;\r\n                    }\r\n                    case \"Enter\": {\r\n                        this.showEditItemDialog(activeItemModel);\r\n                        event.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        showEditItemDialog(item: MyTreeItemModel): void {\r\n            const {shadowRoot} = this;\r\n            const {visibility, name, type} = item;\r\n            const dialog = element(\"dialog\", {\r\n                children: [\r\n                    element(\"form\", {\r\n                        attributes: {\r\n                            method: \"dialog\"\r\n                        },\r\n                        children: [\r\n                            element(\"e-menubar\", {\r\n                                attributes: {\r\n                                    tabindex: 0\r\n                                },\r\n                                children: [\r\n                                    element(\"e-menuitem\", {\r\n                                        attributes: {\r\n                                            type: \"menu\",\r\n                                            label: \"Menu 1\"\r\n                                        },\r\n                                        children: [\r\n                                            \"Menu 1\",\r\n                                            element(\"e-menu\", {\r\n                                                attributes: {\r\n                                                    slot: \"menu\"\r\n                                                },\r\n                                                children: [\r\n                                                    element(\"e-menuitem\", {\r\n                                                        attributes: {\r\n                                                            type: \"checkbox\"\r\n                                                        },\r\n                                                        children: \"Menuitem 1\"\r\n                                                    }),\r\n                                                    element(\"e-menuitem\", {\r\n                                                        attributes: {\r\n                                                            type: \"checkbox\"\r\n                                                        },\r\n                                                        children: \"Menuitem 2\"\r\n                                                    }),\r\n                                                    element(\"e-menuitem\", {\r\n                                                        attributes: {\r\n                                                            type: \"submenu\"\r\n                                                        },\r\n                                                        children: [\r\n                                                            \"Submenu 1\",\r\n                                                            element(\"e-menu\", {\r\n                                                                attributes: {\r\n                                                                    slot: \"menu\"\r\n                                                                },\r\n                                                                children: [\r\n                                                                    EMenuItem.radio({\r\n                                                                        label: \"SubmenuItem 1\",\r\n                                                                        name: \"radio\",\r\n                                                                        value: String(0)\r\n                                                                    }),\r\n                                                                    EMenuItem.radio({\r\n                                                                        label: \"SubmenuItem 2\",\r\n                                                                        name: \"radio\",\r\n                                                                        value: String(1)\r\n                                                                    }),\r\n                                                                    EMenuItem.radio({\r\n                                                                        label: \"SubmenuItem 3\",\r\n                                                                        name: \"radio\",\r\n                                                                        value: String(3)\r\n                                                                    })\r\n                                                                ]\r\n                                                            })\r\n                                                        ]\r\n                                                    })\r\n                                                ]\r\n                                            })\r\n                                        ]\r\n                                    })\r\n                                ]\r\n                            }),\r\n                            element(\"e-tablist\", {\r\n                                attributes: {\r\n                                    tabindex: 0\r\n                                },\r\n                                children: [\r\n                                    element(\"e-tab\", {\r\n                                        attributes: {\r\n                                            controls: \"properties\"\r\n                                        },\r\n                                        children: \"Properties\"\r\n                                    })\r\n                                ]\r\n                            }),\r\n                            element(\"e-tabpanel\", {\r\n                                attributes: {\r\n                                    id: \"properties\"\r\n                                },\r\n                                children: [\r\n                                    element(\"fieldset\", {\r\n                                        children: [\r\n                                            element(\"legend\", {\r\n                                                children: \"Item information\"\r\n                                            }),\r\n                                            element(\"div\", {\r\n                                                attributes: {\r\n                                                    class: \"form-content\"\r\n                                                },\r\n                                                children: [\r\n                                                    element(\"label\", {\r\n                                                        attributes: {\r\n                                                            for: \"visibility\"\r\n                                                        },\r\n                                                        children: \"Visibility\"\r\n                                                    }),\r\n                                                    element(\"input\", {\r\n                                                        attributes: {\r\n                                                            id: \"visibility\",\r\n                                                            type: \"checkbox\",\r\n                                                            name: \"visibility\",\r\n                                                            checked: visibility,\r\n                                                            tabindex: 0,\r\n                                                            autofocus: true\r\n                                                        }\r\n                                                    }),\r\n                                                    element(\"label\", {\r\n                                                        attributes: {\r\n                                                            for: \"name\"\r\n                                                        },\r\n                                                        children: \"Name\"\r\n                                                    }),\r\n                                                    element(\"input\", {\r\n                                                        attributes: {\r\n                                                            id: \"name\",\r\n                                                            type: \"text\",\r\n                                                            name: \"name\",\r\n                                                            value: name,\r\n                                                            tabindex: 0\r\n                                                        }\r\n                                                    }),\r\n                                                    element(\"label\", {\r\n                                                        attributes: {\r\n                                                            for: \"type\"\r\n                                                        },\r\n                                                        children: \"Type\"\r\n                                                    }),\r\n                                                    element(\"e-select\", {\r\n                                                        attributes: {\r\n                                                            id: \"type\",\r\n                                                            name: \"type\",\r\n                                                            tabindex: 0\r\n                                                        },\r\n                                                        children: [\"parent\", \"leaf\"].map(\r\n                                                            type_i => element(\"e-option\", {\r\n                                                                attributes: {\r\n                                                                    label: type_i,\r\n                                                                    value: type_i,\r\n                                                                    selected: type === type_i\r\n                                                                }\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                ]\r\n                                            })\r\n                                        ]\r\n                                    })\r\n                                ]\r\n                            }),\r\n                            element(\"footer\", {\r\n                                attributes: {\r\n                                    class: \"dialog-footer\"\r\n                                },\r\n                                children: [\r\n                                    element(\"button\", {\r\n                                        attributes: {\r\n                                            type: \"submit\",\r\n                                            value: \"confirm\"\r\n                                        },\r\n                                        children: \"Confirm\"\r\n                                    }),\r\n                                    element(\"button\", {\r\n                                        attributes: {\r\n                                            value: \"cancel\"\r\n                                        },\r\n                                        children: \"Cancel\"\r\n                                    })\r\n                                ]\r\n                            })\r\n                        ]\r\n                    })\r\n                ],\r\n                listeners: {\r\n                    close: (event) => {\r\n                        const {currentTarget} = event;\r\n                        const targetDialog = <HTMLDialogElement>currentTarget;\r\n                        if (targetDialog.returnValue === \"confirm\") {\r\n                            const form = targetDialog.querySelector(\"form\")!;\r\n                            const formData = new FormData(form);\r\n                            item.visibility = Boolean(formData.get(\"visibility\"));\r\n                            item.type = <\"leaf\" | \"parent\">String(formData.get(\"type\"));\r\n                            item.name = String(formData.get(\"name\"));\r\n                        }\r\n                        targetDialog.remove();\r\n                    }\r\n                }\r\n            });\r\n            shadowRoot.append(dialog);\r\n            dialog.showModal();\r\n        }\r\n\r\n        #handleDoubleClickEvent(event: MouseEvent): void {\r\n            const {target} = event;\r\n            const targetItem = <HTMLETreeItemElement>(<Element>target).closest(\"e-treeitem\");\r\n            const targetItemModel = <MyTreeItemModel>this.treeItem(targetItem);\r\n            if (targetItemModel) {\r\n                this.showEditItemDialog(targetItemModel);\r\n            }\r\n        }\r\n    };\r\n\r\n    const treeView = new MyTreeView();\r\n    treeView.draggable = true;\r\n    treeView.setModel(treeModel);\r\n    treeView.render();\r\n    document.body.append(treeView);\r\n\r\n    document.body.append(\r\n        element(\"e-menubar\", {\r\n            attributes: {\r\n                tabindex: 0\r\n            },\r\n            children: [\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        type: \"menu\",\r\n                        label: \"Menu 1\",\r\n                        disabled: true\r\n                    },\r\n                    children: [\r\n                        \"Menu 1\"\r\n                    ]\r\n                }),\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        type: \"menu\",\r\n                        label: \"Menu 1\"\r\n                    },\r\n                    children: [\r\n                        \"Menu 1\",\r\n                        element(\"e-menu\", {\r\n                            attributes: {\r\n                                slot: \"menu\"\r\n                            },\r\n                            children: [\r\n                                element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"checkbox\"\r\n                                    },\r\n                                    children: \"Menuitem 1\"\r\n                                }),\r\n                                element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"submenu\"\r\n                                    },\r\n                                    children: [\r\n                                        \"Submenu 1\",\r\n                                        element(\"e-menu\", {\r\n                                            attributes: {\r\n                                                slot: \"menu\"\r\n                                            },\r\n                                            children: [\r\n                                                EMenuItem.radio({\r\n                                                    label: \"SubmenuItem 1\",\r\n                                                    name: \"radio\",\r\n                                                    value: String(0)\r\n                                                }),\r\n                                                EMenuItem.radio({\r\n                                                    label: \"SubmenuItem 2\",\r\n                                                    name: \"radio\",\r\n                                                    value: String(1)\r\n                                                }),\r\n                                                EMenuItem.radio({\r\n                                                    label: \"SubmenuItem 3\",\r\n                                                    name: \"radio\",\r\n                                                    value: String(3)\r\n                                                })\r\n                                            ]\r\n                                        })\r\n                                    ]\r\n                                })\r\n                            ]\r\n                        })\r\n                    ]\r\n                }),\r\n                element(\"e-menuitem\", {\r\n                    attributes: {\r\n                        type: \"menu\",\r\n                        label: \"Menu 1\"\r\n                    },\r\n                    children: [\r\n                        \"Menu 1\",\r\n                        element(\"e-menu\", {\r\n                            attributes: {\r\n                                slot: \"menu\"\r\n                            },\r\n                            children: [\r\n                                element(\"e-menuitem\", {\r\n                                    attributes: {\r\n                                        type: \"checkbox\"\r\n                                    },\r\n                                    children: \"Checkbox\"\r\n                                })\r\n                            ]\r\n                        })\r\n                    ]\r\n                })\r\n            ]\r\n        })\r\n    );\r\n\r\n    document.body.append(\r\n        element(\"e-toolbar\", {\r\n            children: [\r\n                element(\"e-toolbaritem\", {\r\n                    attributes: {\r\n                        id: \"one\"\r\n                    },\r\n                    children: \"Item 1\"\r\n                }),\r\n                element(\"e-toolbaritem\", {\r\n                    attributes: {\r\n                        id: \"three\",\r\n                    },\r\n                    children: \"Item 3\"\r\n                }),\r\n                element(\"e-toolbaritem\", {\r\n                    attributes: {\r\n                        id: \"four\"\r\n                    },\r\n                    children: \"Item 4\"\r\n                }),\r\n                element(\"e-toolbaritem\", {\r\n                    attributes: {\r\n                        id: \"two\"\r\n                    },\r\n                    children: \"Item 2\"\r\n                })\r\n            ]\r\n        }),\r\n        element(\"e-tooltip\", {\r\n            attributes: {\r\n                for: \"one\",\r\n                position: \"bottom\"\r\n            },\r\n            children: \"First tooltip\"\r\n        }),\r\n        element(\"e-tooltip\", {\r\n            attributes: {\r\n                for: \"two\",\r\n                position: \"top\"\r\n            },\r\n            children: \"Second tooltip!\"\r\n        }),\r\n        element(\"e-tooltip\", {\r\n            attributes: {\r\n                for: \"three\",\r\n                position: \"right\",\r\n            },\r\n            children: \"Third tooltip ?\"\r\n        }),\r\n        element(\"e-tooltip\", {\r\n            attributes: {\r\n                for: \"four\",\r\n                position: \"left\"\r\n            },\r\n            children: \"Fourth.\"\r\n        })\r\n    );\r\n\r\n    document.body.append(\r\n        element(\"e-select\", {\r\n            children: [\"Hello\", \"World\", \"Innocents\"].map(\r\n                option => element(\"e-option\", {\r\n                    attributes: {\r\n                        value: option,\r\n                        label: option\r\n                    }\r\n                })\r\n            )\r\n        })\r\n    );\r\n\r\n    document.body.append(\r\n        ...[\r\n            \"tablist\",\r\n            \"sash\",\r\n            \"loaders\",\r\n            \"tree\",\r\n            \"menubar\",\r\n            \"list\",\r\n            \"status\"\r\n        ].map(example => {\r\n            return element(\"details\", {\r\n                children: [\r\n                    element(\"summary\", {\r\n                        children: `${example}.html`\r\n                    }),\r\n                    element(\"e-import\", {\r\n                        attributes: {\r\n                            src: `example/${example}.html`\r\n                        }\r\n                    })\r\n                ]\r\n            })\r\n        })\r\n    );\r\n    document.querySelector(\"e-import[src='example/status.html']\")!.addEventListener(\"load\", () => {\r\n        const lastStatusItem = document.querySelector(\"e-statusitem:last-child\");\r\n        if (lastStatusItem) {\r\n            lastStatusItem.addEventListener(\"click\", (event) => {\r\n                const {currentTarget, target} = event;\r\n                if (target === currentTarget) {\r\n                    const select = lastStatusItem.querySelector(\"e-select\");\r\n                    if (select) {\r\n                        select.expand();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    class PersonModel extends ModelObject {\r\n        @ModelProperty()\r\n        name: string;\r\n\r\n        @ModelProperty()\r\n        age: number;\r\n\r\n        constructor(name: string, age: number) {\r\n            super();\r\n            this.name = name;\r\n            this.age = age;\r\n        }\r\n    }\r\n\r\n    @CustomElement({name: \"e-person\"})\r\n    class PersonElement extends HTMLElement {\r\n        readonly shadowRoot!: ShadowRoot;\r\n\r\n        #person?: PersonModel;\r\n\r\n        get person(): PersonModel | undefined {\r\n            return this.#person;\r\n        }\r\n\r\n        set person(person: PersonModel | undefined) {\r\n            const oldPerson = this.#person;\r\n            if (oldPerson !== person) {\r\n                if (oldPerson) {\r\n                    revokeReactiveElement(oldPerson, this);\r\n                }\r\n                if (person) {\r\n                    reactiveElement(\r\n                        person, this,\r\n                        this.personReactiveProperties,\r\n                        this.handlePersonModelChange.bind(this)\r\n                    );\r\n                }\r\n                this.#person = person;\r\n            }\r\n        }\r\n\r\n        constructor() {\r\n            super();\r\n            const shadowRoot = this.attachShadow({mode: \"open\"});\r\n            shadowRoot.replaceChildren(\r\n                element(\"input\", {\r\n                    attributes: {\r\n                        id: \"age_input\",\r\n                        type: \"number\"\r\n                    }\r\n                }),\r\n                element(\"input\", {\r\n                    attributes: {\r\n                        id: \"name_input\",\r\n                        type: \"text\"\r\n                    }\r\n                })\r\n            );\r\n            shadowRoot.addEventListener(\"change\", this.#handleInputChangeEvent.bind(this));\r\n        }\r\n\r\n        #handleInputChangeEvent(event: Event): void {\r\n            const {target} = event;\r\n            const {person} = this;\r\n            if (target instanceof HTMLInputElement && person) {\r\n                if (target.matches(\"#name_input\")) {\r\n                    person.name = target.value;\r\n                }\r\n                else if (target.matches(\"#age_input\")) {\r\n                    person.age = target.valueAsNumber;\r\n                }\r\n            }\r\n        }\r\n\r\n        personReactiveProperties = [\"name\", \"age\"];\r\n\r\n        handlePersonModelChange(element: this, propertyName: string, oldValue: any, newValue: any) {\r\n            const {shadowRoot} = this;\r\n            switch (propertyName) {\r\n                case \"name\": {\r\n                    shadowRoot\r\n                        .querySelector<HTMLInputElement>(\"#name_input\")!\r\n                        .value = newValue;\r\n                    break;\r\n                }\r\n                case \"age\": {\r\n                    shadowRoot\r\n                        .querySelector<HTMLInputElement>(\"#age_input\")!\r\n                        .valueAsNumber = newValue;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const personElement = new PersonElement();\r\n    document.body.append(\r\n        personElement\r\n    );\r\n\r\n    (window as any)[\"personElement\"] = personElement;\r\n    (window as any)[\"PersonModel\"] = PersonModel;\r\n\r\n\r\n    document.querySelector(\"e-import[src*='tablist']\")?.addEventListener(\"load\", () => {\r\n        const tablist = document.querySelector<HTMLETabListElement>(\"e-tablist\");\r\n        if (tablist) {\r\n            const {selectedTab} = tablist;\r\n            if (selectedTab) {\r\n                const tabBox = selectedTab.getBoundingClientRect();\r\n                const {bottom, left, width} = tabBox;\r\n                tablist.animate([\r\n                    { width: `${width}px`, left: `${left}px`, top: `${bottom}px` }\r\n                ], {\r\n                    duration: 0,\r\n                    fill: \"forwards\",\r\n                    easing: \"ease-in-out\",\r\n                    pseudoElement: \"::after\"\r\n                });\r\n            }\r\n            tablist?.addEventListener(\"click\", (event) => {\r\n                const {target} = event;\r\n                const tab = (<Element>target).closest(\"e-tab\");\r\n                if (tab) {\r\n                    const tabBox = tab.getBoundingClientRect();\r\n                    const {bottom, left, width} = tabBox;\r\n                    tablist.animate([\r\n                        { width: `${width}px`, left: `${left}px`, top: `${bottom}px` }\r\n                    ], {\r\n                        duration: 400,\r\n                        fill: \"forwards\",\r\n                        easing: \"ease-in-out\",\r\n                        pseudoElement: \"::after\"\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_ModelNodesListBase_items","_ModelEventBase_currentTarget","_ModelEventBase_target","_ModelEventTargetBase_callbacks","_ModelNodeBase_instances","_ModelNodeBase_parentNode","_ModelNodeBase_records","_ModelNodeBase_isRecording","_ModelNodeBase_triggerChange","_ModelNodeBase_handleRecord","_ModelObjectBase_properties","_ModelListBase_items","_ModelChangeObserverBase_instances","_ModelChangeObserverBase_callback","_ModelChangeObserverBase_records","_ModelChangeObserverBase_disconnected","_ModelChangeObserverBase_references","_ModelChangeObserverBase_trigger","_ModelChangeObserverBase_handleModelEvent","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","set","__classPrivateFieldGet","ModelChangeRecordBase","constructor","init","this","target","changeType","propertyName","oldValue","undefined","newValue","removedIndex","removedItems","ModelNodesList","insertedIndex","insertedItems","sortedIndices","PROPERTY_CHANGE","LIST_REMOVE","LIST_INSERT","LIST_SORT","ModelChangeRecord","WeakMap","items","slice","length","item","index","values","ModelEventBase","type","currentTarget","ModelEventTargetAccessor","setCurrentTarget","event","setTarget","ModelEvent","ModelEventTargetBase","Map","receiveEvent","callbacks","forEach","callback_i","addEventListener","callback","push","removeEventListener","callbackIndex","findIndex","splice","delete","dispatchEvent","ModelNodeBase","super","add","parentNode","setParent","isCyclicReference","ancestorNode","beginChanges","endChanges","getRecords","WeakSet","property","records","record","ModelNodeRecordsAccessor","triggerChange","node","handleRecord","ModelNode","ModelProperty","ModelObjectPropertiesAccessor","getProperty","setProperty","ModelObjectBase","ModelObject","ModelList","item_i","indexOf","sort","compareFunction","indexedItems","map","i","indexedItem_a","indexedItem_b","indexedItem_i","prepend","_items","append","insert","Math","abs","remove","clear","removedItem_i","reference","options","properties","propertiesFilter","childList","subtree","filter","record_i","includes","ModelChangeObserver","observe","references","listener","bind","unobserve","disconnect","camelToTrain","str","replace","toLowerCase","AttributeProperty","String","defaultValue","observed","name","observedAttributes","Reflect","Array","isArray","writable","Boolean","hasAttribute","setAttribute","removeAttribute","val","getAttribute","JSON","parse","stringify","Number","parseFloat","CustomElement","elementCtor","customElements","define","fragment","nodes","document","createDocumentFragment","tagName","attributes","dataset","children","listeners","element","createElement","entries","attributeName","attributeValue","toggleAttribute","elementDataset","keys","datasetEntry_i","from","name_i","listener_i","reactiveElementsMap","reactiveElementsFinalizationRegistry","FinalizationRegistry","heldValue","model","reactiveElement","reactiveElementsMapEntry","reactiveElementsArray","reactiveElementsPropertyObserver","reactiveElement_i","elementRef","react","deref","WeakRef","register","observerOptions","concat","property_i","reactiveChildElementsMap","reactiveChildElementsFinalizationRegistry","list","reactiveChildElement","reactiveChildrenElementsMapEntry","reactiveChildElementsArray","reactiveChildElementsObserver","range","listLength","reactiveChildElements_i","parentRef","mapping","placeholder","parent","firstChild","childrenCount","removeChild","insertedItemsArray","before","removedCount","createRange","removeEndIndex","setStartBefore","setEndAfter","deleteContents","childrenArray","index_i","reactiveChildElements","reactiveChildElementsMapEntry","replaceChildren","_HTMLEMenuItemElementBase_instances","_HTMLEMenuItemElementBase_positionMenu","shadowTemplate","style","__decorate","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","decorate","HTMLEMenuItemElementBase","HTMLElement","internals","attachInternals","role","shadowRoot","attachShadow","mode","adoptedStylesheet","CSSStyleSheet","adoptedStyleSheets","content","cloneNode","connectedCallback","tabIndex","attributeChangedCallback","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","toggle","force","expanded","expand","Event","bubbles","collapse","menu","menuStyle","top","itemTop","bottom","itemBottom","left","itemLeft","right","itemRight","getBoundingClientRect","width","menuWidth","height","menuHeight","clientWidth","clientHeight","body","offsetParent","offsetLeft","offsetTop","overflowX","overflowY","closestMenu","closest","closestMenuTop","closestMenuLeft","part","selector","propertyKey","getter","withinShadowRoot","querySelector","_ViewBase_model","HTMLEMenuItemElement","EMenuItem","assign","label","trigger","slot","tabindex","title","click","button","checkbox","radio","submenu","ViewBase","setModel","renderLight","renderShadow","render","shadow","light","_GridViewBase_instances","_GridViewBase_columnDelegate","_GridViewBase_cellDelegate","_GridViewBase_displayFilters","_GridViewBase_searchFilter","_GridViewBase_filter","_GridViewBase_renderGridColumnHeaderCell","_GridViewBase_renderGridBodyRow","_GridViewBase_renderGridDataCell","_GridViewBase_handleHeadContextMenuEvent","_GridViewBase_handleSearchInputEvent","_GridViewBase_handleHeadClickEvent","View","GridModel","rows","initRows","columns","initColumns","getColumnByName","find","column_i","sortByColumn","column","sortOrder","sortorder","sortTest","row_1","row_2","cell_1","extract","cell_2","localeCompare","sign","GridColumnModel","filters","GridRowModel","id","age","GridViewBase","row","gridElement","setColumnDelegate","delegate","setCellDelegate","getRowElement","getColumnHeaderElement","getColumnCellsElements","querySelectorAll","rel","href","input","selectby","multisectable","contextmenu","setSearchFilter","row_i","rowElement","hidden","clearSelection","addDisplayFilter","displayFilters","removeDisplayFilter","filterIndex","removeAllDisplayFilters","searchFilter","some","filter_i","class","resizable","controls","cell","toString","headers","clientX","clientY","targetHead","targetHeader","contextMenu","contextual","columnHeaderElement","maxWidth","cell_i","reduce","max","focus","removeProperty","checked","targetItem","positionContextual","preventScroll","preventDefault","HTMLInputElement","matches","targetColumn","_TreeModel_instances","_TreeModel_handleModelChangeEvent","_TreeViewBase_instances","_TreeViewBase_dragImages","_TreeViewBase_getTreeItemElementUri","_TreeViewBase_getDragImage","_TreeViewBase_renderTreeItem","_TreeViewBase_renderTreeItemDragImage","_TreeViewBase_handleDragStartEvent","_TreeViewBase_handleDropEvent","_TreeViewBase_handleContextMenuEvent","_TreeViewBase_handleFocusEvent","_TreeViewBase_handleFocusInEvent","_TreeViewBase_handleFocusOutEvent","GridView","TreeModel","sortFunction","childItems","subtreeItems","item_a","item_b","flatMap","treeItem_i","of","getItemByUri","uri","itemsCount","uriLength","itemUri","itemUriLength","startsWith","flattenedInsertedItems","insertedItem_i","flattenedRemovedItems","TreeItemModelList","count","removedItemsGroups","TreeItemModel","group","list_i","children_i","child_i","level","parentItem","TreeViewBase","treeElement","draggable","treeItemElement","treeItem","dragstart","drop","focusin","focusout","itemContentDelegate","textContent","itemToolbarDelegate","itemMenuDelegate","selectedItems","activeItem","closestItem","parentElement","toolbar","posinset","treeitem","dragImageElement","span","targetTree","dataTransfer","selectedElements","selectedCount","selectedUris","element_i","uri_i","_","uris","uri_j","selectedUrisString","join","lastUri","lastItem","dropEffect","setData","dragImage","setDragImage","targetUri","targetItemModel","transferedUris","getData","split","transferedItems","targetType","targetParentItem","targetList","sameLabelIndex","item_j","confirm","copyWithin","newElements","beginSelection","selected","endSelection","relatedTarget","contains","relatedPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_DISCONNECTED","DOCUMENT_POSITION_PRECEDING","itemToolbar","TreeView","MyTreeItemModelList","show","hide","display","result","console","log","MyTreeItemModel","childCount","visibility","async","main","fetch","then","resp","json","assets","asset","head","hrefs","as","gridView","Date","getFullYear","treeModel","MyTreeView","badge","iconed","stopPropagation","visibilityItem","pressed","activeItemElement","selectedItemsList","showEditItemDialog","dialog","method","for","autofocus","type_i","close","targetDialog","returnValue","form","formData","FormData","showModal","activeItemModel","treeView","disabled","position","option","example","src","lastStatusItem","select","PersonModel","PersonElement","personReactiveProperties","person","oldPerson","reactiveElementIndex","revokeReactiveElement","handlePersonModelChange","valueAsNumber","personElement","window","tablist","selectedTab","tabBox","animate","duration","fill","easing","pseudoElement","tab"],"sourceRoot":""}